

Microchip Technology PIC LITE Macro Assembler V1.10 build 47796 
                                                                                               Sat Sep 01 20:23:48 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16LF1827
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    49  0000                     INDF0 equ 00h ;# 
    50                           # 65 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    51  0001                     INDF1 equ 01h ;# 
    52                           # 84 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    53  0002                     PCL equ 02h ;# 
    54                           # 103 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    55  0003                     STATUS equ 03h ;# 
    56                           # 166 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    57  0004                     FSR0L equ 04h ;# 
    58                           # 185 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    59  0005                     FSR0H equ 05h ;# 
    60                           # 207 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    61  0006                     FSR1L equ 06h ;# 
    62                           # 226 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    63  0007                     FSR1H equ 07h ;# 
    64                           # 245 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    65  0008                     BSR equ 08h ;# 
    66                           # 296 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    67  0009                     WREG equ 09h ;# 
    68                           # 315 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    69  000A                     PCLATH equ 0Ah ;# 
    70                           # 334 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    71  000B                     INTCON equ 0Bh ;# 
    72                           # 411 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    73  000C                     PORTA equ 0Ch ;# 
    74                           # 472 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    75  000D                     PORTB equ 0Dh ;# 
    76                           # 533 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    77  0011                     PIR1 equ 011h ;# 
    78                           # 594 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    79  0012                     PIR2 equ 012h ;# 
    80                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    81  0013                     PIR3 equ 013h ;# 
    82                           # 683 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    83  0014                     PIR4 equ 014h ;# 
    84                           # 708 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    85  0015                     TMR0 equ 015h ;# 
    86                           # 727 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    87  0016                     TMR1 equ 016h ;# 
    88                           # 733 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    89  0016                     TMR1L equ 016h ;# 
    90                           # 752 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    91  0017                     TMR1H equ 017h ;# 
    92                           # 771 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    93  0018                     T1CON equ 018h ;# 
    94                           # 842 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    95  0019                     T1GCON equ 019h ;# 
    96                           # 911 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    97  001A                     TMR2 equ 01Ah ;# 
    98                           # 930 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
    99  001B                     PR2 equ 01Bh ;# 
   100                           # 949 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   101  001C                     T2CON equ 01Ch ;# 
   102                           # 1019 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   103  001E                     CPSCON0 equ 01Eh ;# 
   104                           # 1072 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   105  001F                     CPSCON1 equ 01Fh ;# 
   106                           # 1117 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   107  008C                     TRISA equ 08Ch ;# 
   108                           # 1178 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   109  008D                     TRISB equ 08Dh ;# 
   110                           # 1239 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   111  0091                     PIE1 equ 091h ;# 
   112                           # 1300 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   113  0092                     PIE2 equ 092h ;# 
   114                           # 1350 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   115  0093                     PIE3 equ 093h ;# 
   116                           # 1389 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   117  0094                     PIE4 equ 094h ;# 
   118                           # 1414 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   119  0095                     OPTION_REG equ 095h ;# 
   120                           # 1496 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   121  0096                     PCON equ 096h ;# 
   122                           # 1546 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   123  0097                     WDTCON equ 097h ;# 
   124                           # 1604 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   125  0098                     OSCTUNE equ 098h ;# 
   126                           # 1661 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   127  0099                     OSCCON equ 099h ;# 
   128                           # 1732 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   129  009A                     OSCSTAT equ 09Ah ;# 
   130                           # 1793 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   131  009B                     ADRES equ 09Bh ;# 
   132                           # 1799 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   133  009B                     ADRESL equ 09Bh ;# 
   134                           # 1818 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   135  009C                     ADRESH equ 09Ch ;# 
   136                           # 1837 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   137  009D                     ADCON0 equ 09Dh ;# 
   138                           # 1916 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   139  009E                     ADCON1 equ 09Eh ;# 
   140                           # 1987 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   141  010C                     LATA equ 010Ch ;# 
   142                           # 2043 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   143  010D                     LATB equ 010Dh ;# 
   144                           # 2104 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   145  0111                     CM1CON0 equ 0111h ;# 
   146                           # 2160 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   147  0112                     CM1CON1 equ 0112h ;# 
   148                           # 2225 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   149  0113                     CM2CON0 equ 0113h ;# 
   150                           # 2281 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   151  0114                     CM2CON1 equ 0114h ;# 
   152                           # 2346 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   153  0115                     CMOUT equ 0115h ;# 
   154                           # 2371 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   155  0116                     BORCON equ 0116h ;# 
   156                           # 2397 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   157  0117                     FVRCON equ 0117h ;# 
   158                           # 2472 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   159  0118                     DACCON0 equ 0118h ;# 
   160                           # 2532 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   161  0119                     DACCON1 equ 0119h ;# 
   162                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   163  011A                     SRCON0 equ 011Ah ;# 
   164                           # 2653 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   165  011B                     SRCON1 equ 011Bh ;# 
   166                           # 2714 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   167  011D                     APFCON0 equ 011Dh ;# 
   168                           # 2775 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   169  011E                     APFCON1 equ 011Eh ;# 
   170                           # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   171  018C                     ANSELA equ 018Ch ;# 
   172                           # 2845 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   173  018D                     ANSELB equ 018Dh ;# 
   174                           # 2909 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   175  0191                     EEADR equ 0191h ;# 
   176                           # 2915 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   177  0191                     EEADRL equ 0191h ;# 
   178                           # 2934 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   179  0192                     EEADRH equ 0192h ;# 
   180                           # 2953 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   181  0193                     EEDAT equ 0193h ;# 
   182                           # 2959 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   183  0193                     EEDATL equ 0193h ;# 
   184                           # 2964 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   185  0193                     EEDATA equ 0193h ;# 
   186                           # 2996 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   187  0194                     EEDATH equ 0194h ;# 
   188                           # 3015 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   189  0195                     EECON1 equ 0195h ;# 
   190                           # 3076 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   191  0196                     EECON2 equ 0196h ;# 
   192                           # 3095 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   193  0199                     RCREG equ 0199h ;# 
   194                           # 3114 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   195  019A                     TXREG equ 019Ah ;# 
   196                           # 3133 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   197  019B                     SPBRGL equ 019Bh ;# 
   198                           # 3138 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   199  019B                     SPBRG equ 019Bh ;# 
   200                           # 3170 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   201  019C                     SPBRGH equ 019Ch ;# 
   202                           # 3189 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   203  019D                     RCSTA equ 019Dh ;# 
   204                           # 3250 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   205  019E                     TXSTA equ 019Eh ;# 
   206                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   207  019F                     BAUDCON equ 019Fh ;# 
   208                           # 3362 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   209  020C                     WPUA equ 020Ch ;# 
   210                           # 3390 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   211  020D                     WPUB equ 020Dh ;# 
   212                           # 3459 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   213  0211                     SSP1BUF equ 0211h ;# 
   214                           # 3464 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   215  0211                     SSPBUF equ 0211h ;# 
   216                           # 3496 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   217  0212                     SSP1ADD equ 0212h ;# 
   218                           # 3501 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   219  0212                     SSPADD equ 0212h ;# 
   220                           # 3533 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   221  0213                     SSP1MSK equ 0213h ;# 
   222                           # 3538 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   223  0213                     SSPMSK equ 0213h ;# 
   224                           # 3570 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   225  0214                     SSP1STAT equ 0214h ;# 
   226                           # 3575 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   227  0214                     SSPSTAT equ 0214h ;# 
   228                           # 3691 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   229  0215                     SSP1CON1 equ 0215h ;# 
   230                           # 3696 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   231  0215                     SSPCON1 equ 0215h ;# 
   232                           # 3700 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   233  0215                     SSPCON equ 0215h ;# 
   234                           # 3894 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   235  0216                     SSP1CON2 equ 0216h ;# 
   236                           # 3899 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   237  0216                     SSPCON2 equ 0216h ;# 
   238                           # 4015 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   239  0217                     SSP1CON3 equ 0217h ;# 
   240                           # 4020 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   241  0217                     SSPCON3 equ 0217h ;# 
   242                           # 4136 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   243  0219                     SSP2BUF equ 0219h ;# 
   244                           # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   245  021A                     SSP2ADD equ 021Ah ;# 
   246                           # 4174 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   247  021B                     SSP2MSK equ 021Bh ;# 
   248                           # 4193 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   249  021C                     SSP2STAT equ 021Ch ;# 
   250                           # 4254 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   251  021D                     SSP2CON1 equ 021Dh ;# 
   252                           # 4323 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   253  021E                     SSP2CON2 equ 021Eh ;# 
   254                           # 4384 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   255  021F                     SSP2CON3 equ 021Fh ;# 
   256                           # 4445 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   257  0291                     CCPR1L equ 0291h ;# 
   258                           # 4464 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   259  0292                     CCPR1H equ 0292h ;# 
   260                           # 4483 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   261  0293                     CCP1CON equ 0293h ;# 
   262                           # 4564 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   263  0294                     PWM1CON equ 0294h ;# 
   264                           # 4633 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   265  0295                     CCP1AS equ 0295h ;# 
   266                           # 4638 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   267  0295                     ECCP1AS equ 0295h ;# 
   268                           # 4794 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   269  0296                     PSTR1CON equ 0296h ;# 
   270                           # 4837 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   271  0298                     CCPR2L equ 0298h ;# 
   272                           # 4856 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   273  0299                     CCPR2H equ 0299h ;# 
   274                           # 4875 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   275  029A                     CCP2CON equ 029Ah ;# 
   276                           # 4956 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   277  029B                     PWM2CON equ 029Bh ;# 
   278                           # 5025 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   279  029C                     CCP2AS equ 029Ch ;# 
   280                           # 5030 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   281  029C                     ECCP2AS equ 029Ch ;# 
   282                           # 5186 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   283  029D                     PSTR2CON equ 029Dh ;# 
   284                           # 5229 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   285  029E                     CCPTMRS equ 029Eh ;# 
   286                           # 5234 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   287  029E                     CCPTMRS0 equ 029Eh ;# 
   288                           # 5402 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   289  0311                     CCPR3L equ 0311h ;# 
   290                           # 5421 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   291  0312                     CCPR3H equ 0312h ;# 
   292                           # 5440 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   293  0313                     CCP3CON equ 0313h ;# 
   294                           # 5503 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   295  0318                     CCPR4L equ 0318h ;# 
   296                           # 5522 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   297  0319                     CCPR4H equ 0319h ;# 
   298                           # 5541 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   299  031A                     CCP4CON equ 031Ah ;# 
   300                           # 5604 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   301  0394                     IOCBP equ 0394h ;# 
   302                           # 5673 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   303  0395                     IOCBN equ 0395h ;# 
   304                           # 5742 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   305  0396                     IOCBF equ 0396h ;# 
   306                           # 5811 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   307  039A                     CLKRCON equ 039Ah ;# 
   308                           # 5886 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   309  039C                     MDCON equ 039Ch ;# 
   310                           # 5936 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   311  039D                     MDSRC equ 039Dh ;# 
   312                           # 5988 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   313  039E                     MDCARL equ 039Eh ;# 
   314                           # 6052 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   315  039F                     MDCARH equ 039Fh ;# 
   316                           # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   317  0415                     TMR4 equ 0415h ;# 
   318                           # 6135 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   319  0416                     PR4 equ 0416h ;# 
   320                           # 6154 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   321  0417                     T4CON equ 0417h ;# 
   322                           # 6224 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   323  041C                     TMR6 equ 041Ch ;# 
   324                           # 6243 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   325  041D                     PR6 equ 041Dh ;# 
   326                           # 6262 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   327  041E                     T6CON equ 041Eh ;# 
   328                           # 6332 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   329  0FE4                     STATUS_SHAD equ 0FE4h ;# 
   330                           # 6363 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   331  0FE5                     WREG_SHAD equ 0FE5h ;# 
   332                           # 6382 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   333  0FE6                     BSR_SHAD equ 0FE6h ;# 
   334                           # 6401 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   335  0FE7                     PCLATH_SHAD equ 0FE7h ;# 
   336                           # 6420 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   337  0FE8                     FSR0L_SHAD equ 0FE8h ;# 
   338                           # 6439 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   339  0FE9                     FSR0H_SHAD equ 0FE9h ;# 
   340                           # 6458 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   341  0FEA                     FSR1L_SHAD equ 0FEAh ;# 
   342                           # 6477 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   343  0FEB                     FSR1H_SHAD equ 0FEBh ;# 
   344                           # 6496 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   345  0FED                     STKPTR equ 0FEDh ;# 
   346                           # 6515 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   347  0FEE                     TOSL equ 0FEEh ;# 
   348                           # 6534 "C:\Program Files (x86)\Microchip\xc8\v1.10\include\pic16lf1827.h"
   349  0FEF                     TOSH equ 0FEFh ;# 
   350                           	FNCALL	_main,_config_clock
   351                           	FNCALL	_main,_config_port
   352                           	FNCALL	_main,_config_adc
   353                           	FNCALL	_main,_ADCRead
   354                           	FNCALL	_main,___lmul
   355                           	FNCALL	_main,___lldiv
   356                           	FNCALL	_main,___llmod
   357                           	FNCALL	_main,_set_sevenseg
   358                           	FNCALL	_main,_delaysome
   359                           	FNCALL	_config_adc,___lldiv
   360                           	FNROOT	_main
   361                           	global	main@F2894
   362                           	global	_PORTA
   363  000C                     _PORTA	set	0xC
   364                           	global	_PORTB
   365  000D                     _PORTB	set	0xD
   366                           	global	_ADCON0bits
   367  009D                     _ADCON0bits	set	0x9D
   368                           	global	_ADCON1bits
   369  009E                     _ADCON1bits	set	0x9E
   370                           	global	_ADRESH
   371  009C                     _ADRESH	set	0x9C
   372                           	global	_ADRESL
   373  009B                     _ADRESL	set	0x9B
   374                           	global	_OSCCONbits
   375  0099                     _OSCCONbits	set	0x99
   376                           	global	_TRISA
   377  008C                     _TRISA	set	0x8C
   378                           	global	_TRISB
   379  008D                     _TRISB	set	0x8D
   380                           	global	_FVRCONbits
   381  0117                     _FVRCONbits	set	0x117
   382                           	global	_LATA
   383  010C                     _LATA	set	0x10C
   384                           	global	_LATAbits
   385  010C                     _LATAbits	set	0x10C
   386                           	global	_LATB
   387  010D                     _LATB	set	0x10D
   388                           	global	_LATBbits
   389  010D                     _LATBbits	set	0x10D
   390                           	global	_ANSELA
   391  018C                     _ANSELA	set	0x18C
   392                           	global	_ANSELBbits
   393  018D                     _ANSELBbits	set	0x18D
   394                           psect	text204,local,class=CODE,delta=2,merge=1
   395                           global __ptext204
   396  0000                     __ptext204:	;psect for function ___lldiv
   397                           ; #config settings
   398                           global __CFG_FOSC$INTOSC
   399  0000                     __CFG_FOSC$INTOSC equ 0x0
   400                           global __CFG_MCLRE$OFF
   401  0000                     __CFG_MCLRE$OFF equ 0x0
   402                           global __CFG_WDTE$OFF
   403  0000                     __CFG_WDTE$OFF equ 0x0
   404                           global __CFG_LVP$OFF
   405  0000                     __CFG_LVP$OFF equ 0x0
   406                           	file	"C:\Users\noah\AppData\Local\Temp\s12g."
   407                           	line	#
   408                           psect cinit,class=CODE,delta=2
   409                           global start_initialization
   410  032D                     start_initialization:
   411                           
   412                           global __initialization
   413  032D                     __initialization:
   414                           psect	bssBANK0,class=BANK0,space=1
   415                           global __pbssBANK0
   416  006E                     __pbssBANK0:
   417  006E                     _errno:
   418  006E                            ds      2
   419                           
   420                           psect	bssBANK1,class=BANK1,space=1
   421                           global __pbssBANK1
   422  00A0                     __pbssBANK1:
   423  00A0                     main@F2894:
   424  00A0                            ds      43
   425                           
   426                           psect clrtext,class=CODE,delta=2
   427                           global clear_ram
   428                           ;	Called with FSR0 containing the base address, and
   429                           ;	WREG with the size to clear
   430  0327                     clear_ram:
   431  0327  0064               	clrwdt			;clear the watchdog before getting into this loop
   432  0328                     clrloop:
   433  0328  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   434  0329  3101               	addfsr	0,1
   435  032A  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   436  032B  2B28               	goto clrloop	;have we reached the end yet?
   437  032C  3400               	retlw	0		;all done for this memory range, return
   438                           ; Clear objects allocated to BANK0
   439                           psect cinit,class=CODE,delta=2,merge=1
   440                           	global __pbssBANK0
   441  032D  01EE               	clrf	((__pbssBANK0)+0)&07Fh
   442  032E  01EF               	clrf	((__pbssBANK0)+1)&07Fh
   443                           ; Clear objects allocated to BANK1
   444                           psect cinit,class=CODE,delta=2,merge=1
   445                           	global __pbssBANK1
   446  032F  30A0               	movlw	low(__pbssBANK1)
   447  0330  0084               	movwf	fsr0l
   448  0331  3000               	movlw	high(__pbssBANK1)
   449  0332  0085               	movwf	fsr0h
   450  0333  302B               	movlw	02Bh
   451  0334  3183  2327  3183   	fcall	clear_ram
   452                           psect cinit,class=CODE,delta=2,merge=1
   453                           global end_of_initialization,__end_of__initialization
   454                           
   455                           ;End of C runtime variable initialization code
   456                           
   457  0337                     end_of_initialization:
   458  0337                     __end_of__initialization:movlb 0
      + 0337  0020               	movlb	0
   459  0338  3185  2D81         ljmp _main	;jump to C main() function
   460                           psect	cstackCOMMON,class=COMMON,space=1
   461                           global __pcstackCOMMON
   462  0070                     __pcstackCOMMON:
   463  0070                     ?_config_port:	; 0 bytes @ 0x0
   464  0070                     ??_config_port:	; 0 bytes @ 0x0
   465  0070                     ?_config_clock:	; 0 bytes @ 0x0
   466  0070                     ??_config_clock:	; 0 bytes @ 0x0
   467  0070                     ?_config_adc:	; 0 bytes @ 0x0
   468  0070                     ?_set_sevenseg:	; 0 bytes @ 0x0
   469  0070                     ??_set_sevenseg:	; 0 bytes @ 0x0
   470  0070                     ?_delaysome:	; 0 bytes @ 0x0
   471  0070                     ??_delaysome:	; 0 bytes @ 0x0
   472                           	global	?_ADCRead
   473  0070                     ?_ADCRead:	; 2 bytes @ 0x0
   474                           	global	?___lmul
   475  0070                     ?___lmul:	; 4 bytes @ 0x0
   476                           	global	?___lldiv
   477  0070                     ?___lldiv:	; 4 bytes @ 0x0
   478                           	global	set_sevenseg@digit
   479  0070                     set_sevenseg@digit:	; 1 bytes @ 0x0
   480                           	global	delaysome@delayawhile
   481  0070                     delaysome@delayawhile:	; 2 bytes @ 0x0
   482                           	global	___lmul@multiplier
   483  0070                     ___lmul@multiplier:	; 4 bytes @ 0x0
   484                           	global	___lldiv@divisor
   485  0070                     ___lldiv@divisor:	; 4 bytes @ 0x0
   486  0070                     	ds	2
   487  0072                     ??_ADCRead:	; 0 bytes @ 0x2
   488  0072                     	ds	2
   489                           	global	___lmul@multiplicand
   490  0074                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   491                           	global	___lldiv@dividend
   492  0074                     ___lldiv@dividend:	; 4 bytes @ 0x4
   493  0074                     	ds	4
   494  0078                     ??___lmul:	; 0 bytes @ 0x8
   495  0078                     ??___lldiv:	; 0 bytes @ 0x8
   496                           	global	___lmul@product
   497  0078                     ___lmul@product:	; 4 bytes @ 0x8
   498  0078                     	ds	1
   499                           	global	___lldiv@quotient
   500  0079                     ___lldiv@quotient:	; 4 bytes @ 0x9
   501  0079                     	ds	4
   502                           	global	___lldiv@counter
   503  007D                     ___lldiv@counter:	; 1 bytes @ 0xD
   504  007D                     	ds	1
   505                           psect	cstackBANK0,class=BANK0,space=1
   506                           global __pcstackBANK0
   507  0020                     __pcstackBANK0:
   508  0020                     ??_config_adc:	; 0 bytes @ 0x0
   509                           	global	?___llmod
   510  0020                     ?___llmod:	; 4 bytes @ 0x0
   511                           	global	___llmod@divisor
   512  0020                     ___llmod@divisor:	; 4 bytes @ 0x0
   513  0020                     	ds	4
   514                           	global	config_adc@adcCal
   515  0024                     config_adc@adcCal:	; 1 bytes @ 0x4
   516                           	global	___llmod@dividend
   517  0024                     ___llmod@dividend:	; 4 bytes @ 0x4
   518  0024                     	ds	1
   519                           	global	config_adc@microV_Count
   520  0025                     config_adc@microV_Count:	; 4 bytes @ 0x5
   521  0025                     	ds	3
   522  0028                     ??___llmod:	; 0 bytes @ 0x8
   523  0028                     	ds	1
   524                           	global	___llmod@counter
   525  0029                     ___llmod@counter:	; 1 bytes @ 0x9
   526                           	global	config_adc@measureFvr
   527  0029                     config_adc@measureFvr:	; 2 bytes @ 0x9
   528  0029                     	ds	2
   529  002B                     ?_main:	; 2 bytes @ 0xB
   530  002B                     main@argc:	; 2 bytes @ 0xB
   531  002B                     	ds	2
   532  002D                     main@argv:	; 2 bytes @ 0xD
   533  002D                     	ds	2
   534  002F                     ??_main:	; 0 bytes @ 0xF
   535  002F                     	ds	6
   536                           	global	main@digit1
   537  0035                     main@digit1:	; 1 bytes @ 0x15
   538  0035                     	ds	1
   539                           	global	main@digit2
   540  0036                     main@digit2:	; 1 bytes @ 0x16
   541  0036                     	ds	1
   542                           	global	main@digit3
   543  0037                     main@digit3:	; 1 bytes @ 0x17
   544  0037                     	ds	1
   545                           	global	main@microVolts
   546  0038                     main@microVolts:	; 4 bytes @ 0x18
   547  0038                     	ds	4
   548                           	global	main@readyToDisplay
   549  003C                     main@readyToDisplay:	; 1 bytes @ 0x1C
   550  003C                     	ds	1
   551                           	global	main@updateadc
   552  003D                     main@updateadc:	; 2 bytes @ 0x1D
   553  003D                     	ds	2
   554                           	global	main@temperature
   555  003F                     main@temperature:	; 4 bytes @ 0x1F
   556  003F                     	ds	4
   557                           	global	main@adc
   558  0043                     main@adc:	; 43 bytes @ 0x23
   559  0043                     	ds	43
   560                           ;!
   561                           ;!Data Sizes:
   562                           ;!    Strings     0
   563                           ;!    Constant    0
   564                           ;!    Data        0
   565                           ;!    BSS         47
   566                           ;!    Persistent  0
   567                           ;!    Stack       0
   568                           ;!
   569                           ;!Auto Spaces:
   570                           ;!    Space          Size  Autos    Used
   571                           ;!    COMMON           14     14      14
   572                           ;!    BANK0            80     78      80
   573                           ;!    BANK1            80      0      43
   574                           ;!    BANK2            80      0       0
   575                           ;!    BANK3            80      0       0
   576                           ;!    BANK4            48      0       0
   577                           
   578                           ;!
   579                           ;!Pointer List with Targets:
   580                           ;!
   581                           ;!    ?___llmod	unsigned long  size(1) Largest target is 0
   582                           ;!
   583                           ;!    ?___lmul	unsigned long  size(1) Largest target is 0
   584                           ;!
   585                           ;!    ?_ADCRead	unsigned int  size(1) Largest target is 0
   586                           ;!
   587                           ;!    ?___lldiv	unsigned long  size(1) Largest target is 0
   588                           ;!
   589                           ;!    environ	PTR PTR unsigned char  size(2) Largest target is 0
   590                           ;!		 -> NULL(NULL[0]), 
   591                           ;!
   592                           ;!    config_adc@adcCal	PTR unsigned long  size(1) Largest target is 43
   593                           ;!		 -> main@adc(BANK0[43]), 
   594                           ;!
   595                           
   596                           
   597                           ;!
   598                           ;!Critical Paths under _main in COMMON
   599                           ;!
   600                           ;!    _main->___lldiv
   601                           ;!    _config_adc->___lldiv
   602                           ;!    ___llmod->___lldiv
   603                           ;!
   604                           ;!Critical Paths under _main in BANK0
   605                           ;!
   606                           ;!    _main->_config_adc
   607                           ;!
   608                           ;!Critical Paths under _main in BANK1
   609                           ;!
   610                           ;!    None.
   611                           ;!
   612                           ;!Critical Paths under _main in BANK2
   613                           ;!
   614                           ;!    None.
   615                           ;!
   616                           ;!Critical Paths under _main in BANK3
   617                           ;!
   618                           ;!    None.
   619                           ;!
   620                           ;!Critical Paths under _main in BANK4
   621                           ;!
   622                           ;!    None.
   623                           
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   626 ;;
   627                           
   628                           ;!
   629                           ;!Call Graph Tables:
   630                           ;!
   631                           ;! ---------------------------------------------------------------------------------
   632                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633                           ;! ---------------------------------------------------------------------------------
   634                           ;! (0) _main                                                67    63      4    1775
   635                           ;!                                             11 BANK0     67    63      4
   636                           ;!                       _config_clock
   637                           ;!                        _config_port
   638                           ;!                         _config_adc
   639                           ;!                            _ADCRead
   640                           ;!                             ___lmul
   641                           ;!                            ___lldiv
   642                           ;!                            ___llmod
   643                           ;!                       _set_sevenseg
   644                           ;!                          _delaysome
   645                           ;! ---------------------------------------------------------------------------------
   646                           ;! (1) _config_port                                          0     0      0       0
   647                           ;! ---------------------------------------------------------------------------------
   648                           ;! (1) _config_clock                                         0     0      0       0
   649                           ;! ---------------------------------------------------------------------------------
   650                           ;! (1) _config_adc                                          11    11      0     345
   651                           ;!                                              0 BANK0     11    11      0
   652                           ;!                            ___lldiv
   653                           ;! ---------------------------------------------------------------------------------
   654                           ;! (1) _ADCRead                                              6     4      2       0
   655                           ;!                                              0 COMMON     6     4      2
   656                           ;! ---------------------------------------------------------------------------------
   657                           ;! (1) _set_sevenseg                                         1     1      0      44
   658                           ;!                                              0 COMMON     1     1      0
   659                           ;! ---------------------------------------------------------------------------------
   660                           ;! (1) _delaysome                                            2     2      0      46
   661                           ;!                                              0 COMMON     2     2      0
   662                           ;! ---------------------------------------------------------------------------------
   663                           ;! (1) ___lmul                                              12     4      8      92
   664                           ;!                                              0 COMMON    12     4      8
   665                           ;! ---------------------------------------------------------------------------------
   666                           ;! (1) ___llmod                                             10     2      8     159
   667                           ;!                                              0 BANK0     10     2      8
   668                           ;!                            ___lldiv (ARG)
   669                           ;! ---------------------------------------------------------------------------------
   670                           ;! (1) ___lldiv                                             14     6      8     162
   671                           ;!                                              0 COMMON    14     6      8
   672                           ;! ---------------------------------------------------------------------------------
   673                           ;! Estimated maximum stack depth 1
   674                           ;! ---------------------------------------------------------------------------------
   675                           ;!
   676                           ;! Call Graph Graphs:
   677                           ;!
   678                           ;! _main (ROOT)
   679                           ;!   _config_clock
   680                           ;!   _config_port
   681                           ;!   _config_adc
   682                           ;!     ___lldiv
   683                           ;!   _ADCRead
   684                           ;!   ___lmul
   685                           ;!   ___lldiv
   686                           ;!   ___llmod
   687                           ;!     ___lldiv (ARG)
   688                           ;!   _set_sevenseg
   689                           ;!   _delaysome
   690                           ;!
   691                           
   692                           ;! Address spaces:
   693                           
   694                           ;!Name               Size   Autos  Total    Cost      Usage
   695                           ;!BIGRAM             170      0       0       0        0.0%
   696                           ;!EEDATA             100      0       0       0        0.0%
   697                           ;!NULL                 0      0       0       0        0.0%
   698                           ;!CODE                 0      0       0       0        0.0%
   699                           ;!BITCOMMON            E      0       0       1        0.0%
   700                           ;!BITSFR0              0      0       0       1        0.0%
   701                           ;!SFR0                 0      0       0       1        0.0%
   702                           ;!COMMON               E      E       E       2      100.0%
   703                           ;!BITSFR1              0      0       0       2        0.0%
   704                           ;!SFR1                 0      0       0       2        0.0%
   705                           ;!BITSFR2              0      0       0       3        0.0%
   706                           ;!SFR2                 0      0       0       3        0.0%
   707                           ;!STACK                0      0       2       3        0.0%
   708                           ;!BITSFR3              0      0       0       4        0.0%
   709                           ;!SFR3                 0      0       0       4        0.0%
   710                           ;!ABS                  0      0      89       4        0.0%
   711                           ;!BITBANK0            50      0       0       5        0.0%
   712                           ;!BITSFR4              0      0       0       5        0.0%
   713                           ;!SFR4                 0      0       0       5        0.0%
   714                           ;!BANK0               50     4E      50       6      100.0%
   715                           ;!BITSFR5              0      0       0       6        0.0%
   716                           ;!SFR5                 0      0       0       6        0.0%
   717                           ;!BITBANK1            50      0       0       7        0.0%
   718                           ;!BITSFR6              0      0       0       7        0.0%
   719                           ;!SFR6                 0      0       0       7        0.0%
   720                           ;!BANK1               50      0      2B       8       53.8%
   721                           ;!BITSFR7              0      0       0       8        0.0%
   722                           ;!SFR7                 0      0       0       8        0.0%
   723                           ;!BITBANK2            50      0       0       9        0.0%
   724                           ;!BITSFR8              0      0       0       9        0.0%
   725                           ;!SFR8                 0      0       0       9        0.0%
   726                           ;!BANK2               50      0       0      10        0.0%
   727                           ;!BITSFR9              0      0       0      10        0.0%
   728                           ;!SFR9                 0      0       0      10        0.0%
   729                           ;!BITBANK3            50      0       0      11        0.0%
   730                           ;!BITSFR10             0      0       0      11        0.0%
   731                           ;!SFR10                0      0       0      11        0.0%
   732                           ;!BANK3               50      0       0      12        0.0%
   733                           ;!BITSFR11             0      0       0      12        0.0%
   734                           ;!SFR11                0      0       0      12        0.0%
   735                           ;!BITBANK4            30      0       0      13        0.0%
   736                           ;!BITSFR12             0      0       0      13        0.0%
   737                           ;!SFR12                0      0       0      13        0.0%
   738                           ;!BANK4               30      0       0      14        0.0%
   739                           ;!BITSFR13             0      0       0      14        0.0%
   740                           ;!SFR13                0      0       0      14        0.0%
   741                           ;!BITSFR14             0      0       0      15        0.0%
   742                           ;!SFR14                0      0       0      15        0.0%
   743                           ;!DATA                 0      0      8B      15        0.0%
   744                           ;!BITSFR15             0      0       0      16        0.0%
   745                           ;!SFR15                0      0       0      16        0.0%
   746                           ;!BITSFR16             0      0       0      17        0.0%
   747                           ;!SFR16                0      0       0      17        0.0%
   748                           ;!BITSFR17             0      0       0      18        0.0%
   749                           ;!SFR17                0      0       0      18        0.0%
   750                           ;!BITSFR18             0      0       0      19        0.0%
   751                           ;!SFR18                0      0       0      19        0.0%
   752                           ;!BITSFR19             0      0       0      20        0.0%
   753                           ;!SFR19                0      0       0      20        0.0%
   754                           ;!BITSFR20             0      0       0      21        0.0%
   755                           ;!SFR20                0      0       0      21        0.0%
   756                           ;!BITSFR21             0      0       0      22        0.0%
   757                           ;!SFR21                0      0       0      22        0.0%
   758                           ;!BITSFR22             0      0       0      23        0.0%
   759                           ;!SFR22                0      0       0      23        0.0%
   760                           ;!BITSFR23             0      0       0      24        0.0%
   761                           ;!SFR23                0      0       0      24        0.0%
   762                           ;!BITSFR24             0      0       0      25        0.0%
   763                           ;!SFR24                0      0       0      25        0.0%
   764                           ;!BITSFR25             0      0       0      26        0.0%
   765                           ;!SFR25                0      0       0      26        0.0%
   766                           ;!BITSFR26             0      0       0      27        0.0%
   767                           ;!SFR26                0      0       0      27        0.0%
   768                           ;!BITSFR27             0      0       0      28        0.0%
   769                           ;!SFR27                0      0       0      28        0.0%
   770                           ;!BITSFR28             0      0       0      29        0.0%
   771                           ;!SFR28                0      0       0      29        0.0%
   772                           ;!BITSFR29             0      0       0      30        0.0%
   773                           ;!SFR29                0      0       0      30        0.0%
   774                           ;!BITSFR30             0      0       0      31        0.0%
   775                           ;!SFR30                0      0       0      31        0.0%
   776                           ;!BITSFR31             0      0       0      32        0.0%
   777                           ;!SFR31                0      0       0      32        0.0%
   778                           
   779                           	global	_main
   780                           
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 246 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  argc            2   11[BANK0 ] int 
   786 ;;  argv            2   13[BANK0 ] PTR PTR unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  adc            43   35[BANK0 ] struct adc_s
   789 ;;  temperature     4   31[BANK0 ] unsigned long 
   790 ;;  microVolts      4   24[BANK0 ] unsigned long 
   791 ;;  updateadc       2   29[BANK0 ] unsigned int 
   792 ;;  readyToDispl    1   28[BANK0 ] unsigned char 
   793 ;;  digit3          1   23[BANK0 ] unsigned char 
   794 ;;  digit2          1   22[BANK0 ] unsigned char 
   795 ;;  digit1          1   21[BANK0 ] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  2   11[BANK0 ] int 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 17F/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   805 ;;      Params:         0       4       0       0       0       0
   806 ;;      Locals:         0      57       0       0       0       0
   807 ;;      Temps:          0       6       0       0       0       0
   808 ;;      Totals:         0      67       0       0       0       0
   809 ;;Total ram usage:       67 bytes
   810 ;; Hardware stack levels required when called:    2
   811 ;; This function calls:
   812 ;;		_config_clock
   813 ;;		_config_port
   814 ;;		_config_adc
   815 ;;		_ADCRead
   816 ;;		___lmul
   817 ;;		___lldiv
   818 ;;		___llmod
   819 ;;		_set_sevenseg
   820 ;;		_delaysome
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1
   826                           global __pmaintext
   827  0581                     __pmaintext:	;psect for function _main
   828                           psect	maintext
   829                           	file	"main.c"
   830                           	line	246
   831                           	global	__size_of_main
   832  027F                     	__size_of_main	equ	__end_of_main-_main
   833                           	
   834  0581                     _main:	
   835                           	opt	stack 14
   836                           ; Regs used in _main: [allreg]
   837                           	line	250
   838                           	
   839  0581                     l4237:	
   840                           ;main.c: 247: adc_t adc = {
   841                           ;main.c: 248: 0,
   842                           ;main.c: 249: 0
   843                           ;main.c: 250: };
   844  0581  30A0               	movlw	low(main@F2894)
   845  0582  0086               	movwf	fsr1l
   846  0583  3000               	movlw	high(main@F2894)
   847  0584  0087               	movwf	fsr1h
   848  0585  3043               	movlw	low(main@adc)
   849  0586  0084               	movwf	fsr0l
   850  0587  3000               	movlw	high(main@adc)
   851  0588  0085               	movwf	fsr0h
   852  0589  302B               	movlw	43
   853  058A  00FF               	movwf	btemp+1
   854  058B                     u660:
   855  058B  0016               	moviw	fsr1++
   856  058C  001A               	movwi	fsr0++
   857  058D  0BFF               	decfsz	btemp+1,f
   858  058E  2D8B               	goto	u660
   859                           	line	252
   860                           	
   861  058F                     l4239:	
   862                           ;main.c: 252: unsigned char readyToDisplay = 0;
   863  058F  0020               	movlb 0	; select bank0
   864  0590  01BC               	clrf	(main@readyToDisplay)
   865                           	line	253
   866                           	
   867  0591                     l4241:	
   868                           ;main.c: 253: unsigned char digit1=0, digit2=0, digit3=0;
   869  0591  01B5               	clrf	(main@digit1)
   870                           	
   871  0592                     l4243:	
   872  0592  01B6               	clrf	(main@digit2)
   873                           	
   874  0593                     l4245:	
   875  0593  01B7               	clrf	(main@digit3)
   876                           	line	254
   877                           	
   878  0594                     l4247:	
   879                           ;main.c: 254: unsigned int updateadc = 0;
   880  0594  01BD               	clrf	(main@updateadc)
   881  0595  01BE               	clrf	(main@updateadc+1)
   882                           	line	259
   883                           	
   884  0596                     l4249:	
   885                           ;main.c: 255: unsigned long microVolts;
   886                           ;main.c: 256: unsigned long temperature;
   887                           ;main.c: 259: config_clock();
   888  0596  3183  2323  3185   	fcall	_config_clock
   889                           	line	260
   890                           	
   891  0599                     l4251:	
   892                           ;main.c: 260: config_port();
   893  0599  3183  233A  3185   	fcall	_config_port
   894                           	line	261
   895                           	
   896  059C                     l4253:	
   897                           ;main.c: 261: config_adc(&adc.cal);
   898  059C  306A               	movlw	(main@adc+027h)&0ffh
   899  059D  3184  24E7  3185   	fcall	_config_adc
   900                           	line	264
   901                           	
   902  05A0                     l4255:	
   903                           ;main.c: 264: for(updateadc=0;updateadc<200;){
   904  05A0  0020               	movlb 0	; select bank0
   905  05A1  01BD               	clrf	(main@updateadc)
   906  05A2  01BE               	clrf	(main@updateadc+1)
   907                           	
   908  05A3                     l4257:	
   909  05A3  3000               	movlw	high(0C8h)
   910  05A4  023E               	subwf	(main@updateadc+1),w
   911  05A5  30C8               	movlw	low(0C8h)
   912  05A6  1903               	skipnz
   913  05A7  023D               	subwf	(main@updateadc),w
   914  05A8  1C03               	skipc
   915  05A9  2DAB               	goto	u671
   916  05AA  2DAC               	goto	u670
   917  05AB                     u671:
   918  05AB  2DAE               	goto	l4261
   919  05AC                     u670:
   920  05AC  2DBC               	goto	l4263
   921                           	
   922  05AD                     l4259:	
   923  05AD  2DBC               	goto	l4263
   924                           	
   925  05AE                     l1601:	
   926                           	line	265
   927                           	
   928  05AE                     l4261:	
   929                           ;main.c: 265: updateadc++;
   930  05AE  3001               	movlw	low(01h)
   931  05AF  07BD               	addwf	(main@updateadc),f
   932  05B0  3000               	movlw	high(01h)
   933  05B1  3DBE               	addwfc	(main@updateadc+1),f
   934                           	line	264
   935  05B2  3000               	movlw	high(0C8h)
   936  05B3  023E               	subwf	(main@updateadc+1),w
   937  05B4  30C8               	movlw	low(0C8h)
   938  05B5  1903               	skipnz
   939  05B6  023D               	subwf	(main@updateadc),w
   940  05B7  1C03               	skipc
   941  05B8  2DBA               	goto	u681
   942  05B9  2DBB               	goto	u680
   943  05BA                     u681:
   944  05BA  2DAE               	goto	l4261
   945  05BB                     u680:
   946  05BB  2DBC               	goto	l4263
   947                           	
   948  05BC                     l1602:	
   949                           	line	269
   950                           	
   951  05BC                     l4263:	
   952                           ;main.c: 266: }
   953                           ;main.c: 269: adc.avg = ADCRead();
   954  05BC  3183  234D  3185   	fcall	_ADCRead
   955  05BF  0871               	movf	(1+(?_ADCRead)),w
   956  05C0  0020               	movlb 0	; select bank0
   957  05C1  01E9               	clrf	1+(main@adc)+025h
   958  05C2  07E9               	addwf	1+(main@adc)+025h
   959  05C3  0870               	movf	(0+(?_ADCRead)),w
   960  05C4  01E8               	clrf	0+(main@adc)+025h
   961  05C5  07E8               	addwf	0+(main@adc)+025h
   962                           
   963                           	line	270
   964                           	
   965  05C6                     l4265:	
   966                           ;main.c: 270: adc.sum = adc.avg * 16;
   967  05C6  3025               	movlw	(025h)
   968  05C7  3E43               	addlw	main@adc&0ffh
   969  05C8  0086               	movwf	fsr1l
   970  05C9  0187               	clrf fsr1h	
   971                           	
   972  05CA  3F40               	moviw	[0]fsr1
   973  05CB  00AF               	movwf	(??_main+0)+0
   974  05CC  3F41               	moviw	[1]fsr1
   975  05CD  00B0               	movwf	(??_main+0)+0+1
   976  05CE  3004               	movlw	04h
   977  05CF                     u695:
   978  05CF  35AF               	lslf	(??_main+0)+0,f
   979  05D0  0DB0               	rlf	(??_main+0)+1,f
   980  05D1  0B89               	decfsz	wreg,f
   981  05D2  2DCF               	goto	u695
   982  05D3  082F               	movf	0+(??_main+0)+0,w
   983  05D4  00B1               	movwf	((??_main+2)+0)
   984  05D5  0830               	movf	1+(??_main+0)+0,w
   985  05D6  00B2               	movwf	((??_main+2)+0+1)
   986  05D7  01B3               	clrf	((??_main+2)+0+2)
   987  05D8  01B4               	clrf	((??_main+2)+0+3)
   988  05D9  0834               	movf	3+(??_main+2)+0,w
   989  05DA  00C7               	movwf	3+(main@adc)+01h
   990  05DB  0833               	movf	2+(??_main+2)+0,w
   991  05DC  00C6               	movwf	2+(main@adc)+01h
   992  05DD  0832               	movf	1+(??_main+2)+0,w
   993  05DE  00C5               	movwf	1+(main@adc)+01h
   994  05DF  0831               	movf	0+(??_main+2)+0,w
   995  05E0  00C4               	movwf	0+(main@adc)+01h
   996                           
   997                           	line	271
   998                           	
   999  05E1                     l4267:	
  1000                           ;main.c: 271: for(updateadc=0;updateadc<16;updateadc++){
  1001  05E1  01BD               	clrf	(main@updateadc)
  1002  05E2  01BE               	clrf	(main@updateadc+1)
  1003                           	
  1004  05E3                     l4269:	
  1005  05E3  3000               	movlw	high(010h)
  1006  05E4  023E               	subwf	(main@updateadc+1),w
  1007  05E5  3010               	movlw	low(010h)
  1008  05E6  1903               	skipnz
  1009  05E7  023D               	subwf	(main@updateadc),w
  1010  05E8  1C03               	skipc
  1011  05E9  2DEB               	goto	u701
  1012  05EA  2DEC               	goto	u700
  1013  05EB                     u701:
  1014  05EB  2DEE               	goto	l4273
  1015  05EC                     u700:
  1016  05EC  2E07               	goto	l4279
  1017                           	
  1018  05ED                     l4271:	
  1019  05ED  2E07               	goto	l4279
  1020                           	
  1021  05EE                     l1603:	
  1022                           	line	272
  1023                           	
  1024  05EE                     l4273:	
  1025                           ;main.c: 272: adc.data[updateadc] = adc.avg;
  1026  05EE  083D               	movf	(main@updateadc),w
  1027  05EF  0709               	addwf	wreg,w
  1028  05F0  3E05               	addlw	05h
  1029  05F1  3E43               	addlw	main@adc&0ffh
  1030  05F2  0086               	movwf	fsr1l
  1031  05F3  0187               	clrf fsr1h	
  1032                           	
  1033  05F4  0868               	movf	0+(main@adc)+025h,w
  1034  05F5  3FC0               	movwi	[0]fsr1
  1035  05F6  0869               	movf	1+(main@adc)+025h,w
  1036  05F7  3FC1               	movwi	[1]fsr1
  1037                           	line	271
  1038                           	
  1039  05F8                     l4275:	
  1040  05F8  3001               	movlw	low(01h)
  1041  05F9  07BD               	addwf	(main@updateadc),f
  1042  05FA  3000               	movlw	high(01h)
  1043  05FB  3DBE               	addwfc	(main@updateadc+1),f
  1044                           	
  1045  05FC                     l4277:	
  1046  05FC  3000               	movlw	high(010h)
  1047  05FD  023E               	subwf	(main@updateadc+1),w
  1048  05FE  3010               	movlw	low(010h)
  1049  05FF  1903               	skipnz
  1050  0600  023D               	subwf	(main@updateadc),w
  1051  0601  1C03               	skipc
  1052  0602  2E04               	goto	u711
  1053  0603  2E05               	goto	u710
  1054  0604                     u711:
  1055  0604  2DEE               	goto	l4273
  1056  0605                     u710:
  1057  0605  2E07               	goto	l4279
  1058                           	
  1059  0606                     l1604:	
  1060  0606  2E07               	goto	l4279
  1061                           	line	275
  1062                           ;main.c: 273: }
  1063                           ;main.c: 275: while(1){
  1064                           	
  1065  0607                     l1605:	
  1066                           	line	276
  1067                           	
  1068  0607                     l4279:	
  1069                           ;main.c: 276: if(!readyToDisplay){
  1070  0607  0020               	movlb 0	; select bank0
  1071  0608  08BC               	movf	(main@readyToDisplay),f
  1072  0609  1D03               	skipz
  1073  060A  2E0C               	goto	u721
  1074  060B  2E0D               	goto	u720
  1075  060C                     u721:
  1076  060C  2EBD               	goto	l4305
  1077  060D                     u720:
  1078                           	line	277
  1079                           	
  1080  060D                     l4281:	
  1081                           ;main.c: 277: if(updateadc-- == 0){
  1082  060D  3001               	movlw	low(01h)
  1083  060E  02BD               	subwf	(main@updateadc),f
  1084  060F  3000               	movlw	high(01h)
  1085  0610  3BBE               	subwfb	(main@updateadc+1),f
  1086  0611  30FF               	movlw	high(0FFFFh)
  1087  0612  063E               	xorwf	((main@updateadc+1)),w
  1088  0613  1D03               	skipz
  1089  0614  2E17               	goto	u735
  1090  0615  30FF               	movlw	low(0FFFFh)
  1091  0616  063D               	xorwf	((main@updateadc)),w
  1092  0617                     u735:
  1093                           
  1094  0617  1D03               	skipz
  1095  0618  2E1A               	goto	u731
  1096  0619  2E1B               	goto	u730
  1097  061A                     u731:
  1098  061A  2EBD               	goto	l4305
  1099  061B                     u730:
  1100                           	line	278
  1101                           	
  1102  061B                     l4283:	
  1103                           ;main.c: 278: updateadc = 5;
  1104  061B  3005               	movlw	low(05h)
  1105  061C  00BD               	movwf	(main@updateadc)
  1106  061D  3000               	movlw	high(05h)
  1107  061E  00BE               	movwf	((main@updateadc))+1
  1108                           	line	282
  1109                           	
  1110  061F                     l4285:	
  1111                           ;main.c: 282: config_adc(&adc.cal);
  1112  061F  306A               	movlw	(main@adc+027h)&0ffh
  1113  0620  3184  24E7  3185   	fcall	_config_adc
  1114                           	line	284
  1115                           	
  1116  0623                     l4287:	
  1117                           ;main.c: 284: adc.sum -= adc.data[adc.in];
  1118  0623  0020               	movlb 0	; select bank0
  1119  0624  0843               	movf	(main@adc),w
  1120  0625  0709               	addwf	wreg,w
  1121  0626  3E05               	addlw	05h
  1122  0627  3E43               	addlw	main@adc&0ffh
  1123  0628  0086               	movwf	fsr1l
  1124  0629  0187               	clrf fsr1h	
  1125                           	
  1126  062A  3F40               	moviw	[0]fsr1
  1127  062B  00AF               	movwf	(??_main+0)+0
  1128  062C  3F41               	moviw	[1]fsr1
  1129  062D  00B0               	movwf	(??_main+0)+0+1
  1130  062E  082F               	movf	0+(??_main+0)+0,w
  1131  062F  00B1               	movwf	((??_main+2)+0)
  1132  0630  0830               	movf	1+(??_main+0)+0,w
  1133  0631  00B2               	movwf	((??_main+2)+0+1)
  1134  0632  01B3               	clrf	((??_main+2)+0+2)
  1135  0633  01B4               	clrf	((??_main+2)+0+3)
  1136  0634  0831               	movf	0+(??_main+2)+0,w
  1137  0635  02C4               	subwf	0+(main@adc)+01h,f
  1138  0636  0832               	movf	1+(??_main+2)+0,w
  1139  0637  3BC5               	subwfb	1+(main@adc)+01h,f
  1140  0638  0833               	movf	2+(??_main+2)+0,w
  1141  0639  3BC6               	subwfb	2+(main@adc)+01h,f
  1142  063A  0834               	movf	3+(??_main+2)+0,w
  1143  063B  3BC7               	subwfb	3+(main@adc)+01h,f
  1144                           	line	285
  1145                           	
  1146  063C                     l4289:	
  1147                           ;main.c: 285: adc.data[adc.in] = ADCRead();
  1148  063C  3183  234D  3185   	fcall	_ADCRead
  1149  063F  0020               	movlb 0	; select bank0
  1150  0640  0843               	movf	(main@adc),w
  1151  0641  0709               	addwf	wreg,w
  1152  0642  3E05               	addlw	05h
  1153  0643  3E43               	addlw	main@adc&0ffh
  1154  0644  0086               	movwf	fsr1l
  1155  0645  0187               	clrf fsr1h	
  1156                           	
  1157  0646  0870               	movf	(0+(?_ADCRead)),w
  1158  0647  3FC0               	movwi	[0]fsr1
  1159  0648  0871               	movf	(1+(?_ADCRead)),w
  1160  0649  3FC1               	movwi	[1]fsr1
  1161                           	line	286
  1162                           	
  1163  064A                     l4291:	
  1164                           ;main.c: 286: adc.sum += adc.data[adc.in];
  1165  064A  0843               	movf	(main@adc),w
  1166  064B  0709               	addwf	wreg,w
  1167  064C  3E05               	addlw	05h
  1168  064D  3E43               	addlw	main@adc&0ffh
  1169  064E  0086               	movwf	fsr1l
  1170  064F  0187               	clrf fsr1h	
  1171                           	
  1172  0650  3F40               	moviw	[0]fsr1
  1173  0651  00AF               	movwf	(??_main+0)+0
  1174  0652  3F41               	moviw	[1]fsr1
  1175  0653  00B0               	movwf	(??_main+0)+0+1
  1176  0654  082F               	movf	0+(??_main+0)+0,w
  1177  0655  07C4               	addwf	0+(main@adc)+01h,f
  1178  0656  0830               	movf	1+(??_main+0)+0,w
  1179  0657  3DC5               	addwfc	1+(main@adc)+01h,f
  1180  0658  3000               	movlw	0
  1181  0659  3DC6               	addwfc	2+(main@adc)+01h,f
  1182  065A  3DC7               	addwfc	3+(main@adc)+01h,f
  1183                           	line	287
  1184                           	
  1185  065B                     l4293:	
  1186                           ;main.c: 287: adc.avg = adc.sum / 16;
  1187  065B  0844               	movf	0+(main@adc)+01h,w
  1188  065C  00AF               	movwf	(??_main+0)+0
  1189  065D  0845               	movf	1+(main@adc)+01h,w
  1190  065E  00B0               	movwf	((??_main+0)+0+1)
  1191  065F  0846               	movf	2+(main@adc)+01h,w
  1192  0660  00B1               	movwf	((??_main+0)+0+2)
  1193  0661  0847               	movf	3+(main@adc)+01h,w
  1194  0662  00B2               	movwf	((??_main+0)+0+3)
  1195  0663  3004               	movlw	04h
  1196  0664                     u745:
  1197  0664  36B2               	lsrf	(??_main+0)+3,f
  1198  0665  0CB1               	rrf	(??_main+0)+2,f
  1199  0666  0CB0               	rrf	(??_main+0)+1,f
  1200  0667  0CAF               	rrf	(??_main+0)+0,f
  1201  0668                     u740:
  1202  0668  0B89               	decfsz	wreg,f
  1203  0669  2E64               	goto	u745
  1204  066A  0830               	movf	1+(??_main+0)+0,w
  1205  066B  01E9               	clrf	1+(main@adc)+025h
  1206  066C  07E9               	addwf	1+(main@adc)+025h
  1207  066D  082F               	movf	0+(??_main+0)+0,w
  1208  066E  01E8               	clrf	0+(main@adc)+025h
  1209  066F  07E8               	addwf	0+(main@adc)+025h
  1210                           
  1211                           	line	288
  1212                           	
  1213  0670                     l4295:	
  1214                           ;main.c: 288: adc.in++;
  1215  0670  3001               	movlw	(01h)
  1216  0671  00AF               	movwf	(??_main+0)+0
  1217  0672  082F               	movf	(??_main+0)+0,w
  1218  0673  07C3               	addwf	(main@adc),f
  1219                           	line	289
  1220                           	
  1221  0674                     l4297:	
  1222                           ;main.c: 289: adc.in %= 16;
  1223  0674  300F               	movlw	(0Fh)
  1224  0675  00AF               	movwf	(??_main+0)+0
  1225  0676  082F               	movf	(??_main+0)+0,w
  1226  0677  05C3               	andwf	(main@adc),f
  1227                           	line	291
  1228                           ;main.c: 291: if(adc.in == 0){
  1229  0678  08C3               	movf	(main@adc),f
  1230  0679  1D03               	skipz
  1231  067A  2E7C               	goto	u751
  1232  067B  2E7D               	goto	u750
  1233  067C                     u751:
  1234  067C  2E81               	goto	l4301
  1235  067D                     u750:
  1236                           	line	292
  1237                           	
  1238  067D                     l4299:	
  1239                           ;main.c: 292: readyToDisplay = 1;
  1240  067D  01BC               	clrf	(main@readyToDisplay)
  1241  067E  1403               	bsf	status,0
  1242  067F  0DBC               	rlf	(main@readyToDisplay),f
  1243  0680  2E81               	goto	l4301
  1244                           	line	293
  1245                           	
  1246  0681                     l1608:	
  1247                           	line	295
  1248                           	
  1249  0681                     l4301:	
  1250                           ;main.c: 293: }
  1251                           ;main.c: 295: microVolts = (adc.cal * adc.avg);
  1252  0681  0868               	movf	0+(main@adc)+025h,w
  1253  0682  00F0               	movwf	(?___lmul)
  1254  0683  0869               	movf	1+(main@adc)+025h,w
  1255  0684  00F1               	movwf	((?___lmul))+1
  1256  0685  01F2               	clrf	2+((?___lmul))
  1257  0686  01F3               	clrf	3+((?___lmul))
  1258  0687  3027               	movlw	(027h)
  1259  0688  3E43               	addlw	main@adc&0ffh
  1260  0689  0086               	movwf	fsr1l
  1261  068A  0187               	clrf fsr1h	
  1262                           	
  1263  068B  3F40               	moviw	[0]fsr1
  1264  068C  00F4               	movwf	0+(?___lmul)+04h
  1265  068D  3F41               	moviw	[1]fsr1
  1266  068E  00F5               	movwf	1+(?___lmul)+04h
  1267  068F  3F42               	moviw	[2]fsr1
  1268  0690  00F6               	movwf	2+(?___lmul)+04h
  1269  0691  3F43               	moviw	[3]fsr1
  1270  0692  00F7               	movwf	3+(?___lmul)+04h
  1271  0693  3183  2382  3185   	fcall	___lmul
  1272  0696  0873               	movf	(3+(?___lmul)),w
  1273  0697  0020               	movlb 0	; select bank0
  1274  0698  00BB               	movwf	(main@microVolts+3)
  1275  0699  0872               	movf	(2+(?___lmul)),w
  1276  069A  00BA               	movwf	(main@microVolts+2)
  1277  069B  0871               	movf	(1+(?___lmul)),w
  1278  069C  00B9               	movwf	(main@microVolts+1)
  1279  069D  0870               	movf	(0+(?___lmul)),w
  1280  069E  00B8               	movwf	(main@microVolts)
  1281                           
  1282                           	line	296
  1283                           	
  1284  069F                     l4303:	
  1285                           ;main.c: 296: microVolts /= 1023;
  1286  069F  3000               	movlw	0
  1287  06A0  00F3               	movwf	(?___lldiv+3)
  1288  06A1  3000               	movlw	0
  1289  06A2  00F2               	movwf	(?___lldiv+2)
  1290  06A3  3003               	movlw	03h
  1291  06A4  00F1               	movwf	(?___lldiv+1)
  1292  06A5  30FF               	movlw	0FFh
  1293  06A6  00F0               	movwf	(?___lldiv)
  1294                           
  1295  06A7  083B               	movf	(main@microVolts+3),w
  1296  06A8  00F7               	movwf	3+(?___lldiv)+04h
  1297  06A9  083A               	movf	(main@microVolts+2),w
  1298  06AA  00F6               	movwf	2+(?___lldiv)+04h
  1299  06AB  0839               	movf	(main@microVolts+1),w
  1300  06AC  00F5               	movwf	1+(?___lldiv)+04h
  1301  06AD  0838               	movf	(main@microVolts),w
  1302  06AE  00F4               	movwf	0+(?___lldiv)+04h
  1303                           
  1304  06AF  3184  240C  3185   	fcall	___lldiv
  1305  06B2  0873               	movf	(3+(?___lldiv)),w
  1306  06B3  0020               	movlb 0	; select bank0
  1307  06B4  00BB               	movwf	(main@microVolts+3)
  1308  06B5  0872               	movf	(2+(?___lldiv)),w
  1309  06B6  00BA               	movwf	(main@microVolts+2)
  1310  06B7  0871               	movf	(1+(?___lldiv)),w
  1311  06B8  00B9               	movwf	(main@microVolts+1)
  1312  06B9  0870               	movf	(0+(?___lldiv)),w
  1313  06BA  00B8               	movwf	(main@microVolts)
  1314                           
  1315  06BB  2EBD               	goto	l4305
  1316                           	line	297
  1317                           	
  1318  06BC                     l1607:	
  1319  06BC  2EBD               	goto	l4305
  1320                           	line	298
  1321                           	
  1322  06BD                     l1606:	
  1323                           	line	302
  1324                           	
  1325  06BD                     l4305:	
  1326                           ;main.c: 297: }
  1327                           ;main.c: 298: }
  1328                           ;main.c: 302: temperature = 1858300 - microVolts;
  1329  06BD  0938               	comf	(main@microVolts),w
  1330  06BE  00AF               	movwf	(??_main+0)+0
  1331  06BF  0939               	comf	(main@microVolts+1),w
  1332  06C0  00B0               	movwf	((??_main+0)+0+1)
  1333  06C1  093A               	comf	(main@microVolts+2),w
  1334  06C2  00B1               	movwf	((??_main+0)+0+2)
  1335  06C3  093B               	comf	(main@microVolts+3),w
  1336  06C4  00B2               	movwf	((??_main+0)+0+3)
  1337  06C5  0AAF               	incf	(??_main+0)+0,f
  1338  06C6  1903               	skipnz
  1339  06C7  0AB0               	incf	((??_main+0)+0+1),f
  1340  06C8  1903               	skipnz
  1341  06C9  0AB1               	incf	((??_main+0)+0+2),f
  1342  06CA  1903               	skipnz
  1343  06CB  0AB2               	incf	((??_main+0)+0+3),f
  1344  06CC  30FC               	movlw	0FCh
  1345  06CD  072F               	addwf	(0+(??_main+0)+0),w
  1346  06CE  00BF               	movwf	(main@temperature)
  1347  06CF  305A               	movlw	05Ah
  1348  06D0  3D30               	addwfc	(1+(??_main+0)+0),w
  1349  06D1  00C0               	movwf	1+(main@temperature)
  1350  06D2  301C               	movlw	01Ch
  1351  06D3  3D31               	addwfc	(2+(??_main+0)+0),w
  1352  06D4  00C1               	movwf	2+(main@temperature)
  1353  06D5  3000               	movlw	0
  1354  06D6  3D32               	addwfc	(3+(??_main+0)+0),w
  1355  06D7  00C2               	movwf	3+(main@temperature)
  1356                           	line	303
  1357                           	
  1358  06D8                     l4307:	
  1359                           ;main.c: 303: temperature /= 1167;
  1360  06D8  3000               	movlw	0
  1361  06D9  00F3               	movwf	(?___lldiv+3)
  1362  06DA  3000               	movlw	0
  1363  06DB  00F2               	movwf	(?___lldiv+2)
  1364  06DC  3004               	movlw	04h
  1365  06DD  00F1               	movwf	(?___lldiv+1)
  1366  06DE  308F               	movlw	08Fh
  1367  06DF  00F0               	movwf	(?___lldiv)
  1368                           
  1369  06E0  0842               	movf	(main@temperature+3),w
  1370  06E1  00F7               	movwf	3+(?___lldiv)+04h
  1371  06E2  0841               	movf	(main@temperature+2),w
  1372  06E3  00F6               	movwf	2+(?___lldiv)+04h
  1373  06E4  0840               	movf	(main@temperature+1),w
  1374  06E5  00F5               	movwf	1+(?___lldiv)+04h
  1375  06E6  083F               	movf	(main@temperature),w
  1376  06E7  00F4               	movwf	0+(?___lldiv)+04h
  1377                           
  1378  06E8  3184  240C  3185   	fcall	___lldiv
  1379  06EB  0873               	movf	(3+(?___lldiv)),w
  1380  06EC  0020               	movlb 0	; select bank0
  1381  06ED  00C2               	movwf	(main@temperature+3)
  1382  06EE  0872               	movf	(2+(?___lldiv)),w
  1383  06EF  00C1               	movwf	(main@temperature+2)
  1384  06F0  0871               	movf	(1+(?___lldiv)),w
  1385  06F1  00C0               	movwf	(main@temperature+1)
  1386  06F2  0870               	movf	(0+(?___lldiv)),w
  1387  06F3  00BF               	movwf	(main@temperature)
  1388                           
  1389                           	line	304
  1390                           	
  1391  06F4                     l4309:	
  1392                           ;main.c: 304: temperature = (temperature * 9L + 1600L);
  1393  06F4  0842               	movf	(main@temperature+3),w
  1394  06F5  00F3               	movwf	(?___lmul+3)
  1395  06F6  0841               	movf	(main@temperature+2),w
  1396  06F7  00F2               	movwf	(?___lmul+2)
  1397  06F8  0840               	movf	(main@temperature+1),w
  1398  06F9  00F1               	movwf	(?___lmul+1)
  1399  06FA  083F               	movf	(main@temperature),w
  1400  06FB  00F0               	movwf	(?___lmul)
  1401                           
  1402  06FC  3000               	movlw	0
  1403  06FD  00F7               	movwf	3+(?___lmul)+04h
  1404  06FE  3000               	movlw	0
  1405  06FF  00F6               	movwf	2+(?___lmul)+04h
  1406  0700  3000               	movlw	0
  1407  0701  00F5               	movwf	1+(?___lmul)+04h
  1408  0702  3009               	movlw	09h
  1409  0703  00F4               	movwf	0+(?___lmul)+04h
  1410                           
  1411  0704  3183  2382  3185   	fcall	___lmul
  1412  0707  3040               	movlw	040h
  1413  0708  0770               	addwf	((0+(?___lmul))),w
  1414  0709  0020               	movlb 0	; select bank0
  1415  070A  00BF               	movwf	(main@temperature)
  1416  070B  3006               	movlw	06h
  1417  070C  3D71               	addwfc	((1+(?___lmul))),w
  1418  070D  00C0               	movwf	1+(main@temperature)
  1419  070E  3000               	movlw	0
  1420  070F  3D72               	addwfc	((2+(?___lmul))),w
  1421  0710  00C1               	movwf	2+(main@temperature)
  1422  0711  3000               	movlw	0
  1423  0712  3D73               	addwfc	((3+(?___lmul))),w
  1424  0713  00C2               	movwf	3+(main@temperature)
  1425                           	line	305
  1426                           	
  1427  0714                     l4311:	
  1428                           ;main.c: 305: if((temperature % 5) > 2){
  1429  0714  3000               	movlw	0
  1430  0715  00A3               	movwf	(?___llmod+3)
  1431  0716  3000               	movlw	0
  1432  0717  00A2               	movwf	(?___llmod+2)
  1433  0718  3000               	movlw	0
  1434  0719  00A1               	movwf	(?___llmod+1)
  1435  071A  3005               	movlw	05h
  1436  071B  00A0               	movwf	(?___llmod)
  1437                           
  1438  071C  0842               	movf	(main@temperature+3),w
  1439  071D  00A7               	movwf	3+(?___llmod)+04h
  1440  071E  0841               	movf	(main@temperature+2),w
  1441  071F  00A6               	movwf	2+(?___llmod)+04h
  1442  0720  0840               	movf	(main@temperature+1),w
  1443  0721  00A5               	movwf	1+(?___llmod)+04h
  1444  0722  083F               	movf	(main@temperature),w
  1445  0723  00A4               	movwf	0+(?___llmod)+04h
  1446                           
  1447  0724  3183  23B9  3185   	fcall	___llmod
  1448  0727  3000               	movlw	0
  1449  0728  0020               	movlb 0	; select bank0
  1450  0729  0223               	subwf	(3+(?___llmod)),w
  1451  072A  1D03               	skipz
  1452  072B  2F36               	goto	u765
  1453  072C  3000               	movlw	0
  1454  072D  0222               	subwf	(2+(?___llmod)),w
  1455  072E  1D03               	skipz
  1456  072F  2F36               	goto	u765
  1457  0730  3000               	movlw	0
  1458  0731  0221               	subwf	(1+(?___llmod)),w
  1459  0732  1D03               	skipz
  1460  0733  2F36               	goto	u765
  1461  0734  3003               	movlw	03h
  1462  0735  0220               	subwf	(0+(?___llmod)),w
  1463  0736                     u765:
  1464  0736  1C03               	skipc
  1465  0737  2F39               	goto	u761
  1466  0738  2F3A               	goto	u760
  1467  0739                     u761:
  1468  0739  2F43               	goto	l4315
  1469  073A                     u760:
  1470                           	line	306
  1471                           	
  1472  073A                     l4313:	
  1473                           ;main.c: 306: temperature += 2;
  1474  073A  3002               	movlw	02h
  1475  073B  07BF               	addwf	(main@temperature),f
  1476  073C  3000               	movlw	0
  1477  073D  3DC0               	addwfc	(main@temperature+1),f
  1478  073E  3000               	movlw	0
  1479  073F  3DC1               	addwfc	(main@temperature+2),f
  1480  0740  3000               	movlw	0
  1481  0741  3DC2               	addwfc	(main@temperature+3),f
  1482  0742  2F43               	goto	l4315
  1483                           	line	307
  1484                           	
  1485  0743                     l1609:	
  1486                           	line	308
  1487                           	
  1488  0743                     l4315:	
  1489                           ;main.c: 307: }
  1490                           ;main.c: 308: temperature /= 5L;
  1491  0743  3000               	movlw	0
  1492  0744  00F3               	movwf	(?___lldiv+3)
  1493  0745  3000               	movlw	0
  1494  0746  00F2               	movwf	(?___lldiv+2)
  1495  0747  3000               	movlw	0
  1496  0748  00F1               	movwf	(?___lldiv+1)
  1497  0749  3005               	movlw	05h
  1498  074A  00F0               	movwf	(?___lldiv)
  1499                           
  1500  074B  0842               	movf	(main@temperature+3),w
  1501  074C  00F7               	movwf	3+(?___lldiv)+04h
  1502  074D  0841               	movf	(main@temperature+2),w
  1503  074E  00F6               	movwf	2+(?___lldiv)+04h
  1504  074F  0840               	movf	(main@temperature+1),w
  1505  0750  00F5               	movwf	1+(?___lldiv)+04h
  1506  0751  083F               	movf	(main@temperature),w
  1507  0752  00F4               	movwf	0+(?___lldiv)+04h
  1508                           
  1509  0753  3184  240C  3185   	fcall	___lldiv
  1510  0756  0873               	movf	(3+(?___lldiv)),w
  1511  0757  0020               	movlb 0	; select bank0
  1512  0758  00C2               	movwf	(main@temperature+3)
  1513  0759  0872               	movf	(2+(?___lldiv)),w
  1514  075A  00C1               	movwf	(main@temperature+2)
  1515  075B  0871               	movf	(1+(?___lldiv)),w
  1516  075C  00C0               	movwf	(main@temperature+1)
  1517  075D  0870               	movf	(0+(?___lldiv)),w
  1518  075E  00BF               	movwf	(main@temperature)
  1519                           
  1520                           	line	312
  1521                           	
  1522  075F                     l4317:	
  1523                           ;main.c: 312: digit1 = (temperature / 100) % 10;
  1524  075F  3000               	movlw	0
  1525  0760  00A3               	movwf	(?___llmod+3)
  1526  0761  3000               	movlw	0
  1527  0762  00A2               	movwf	(?___llmod+2)
  1528  0763  3000               	movlw	0
  1529  0764  00A1               	movwf	(?___llmod+1)
  1530  0765  300A               	movlw	0Ah
  1531  0766  00A0               	movwf	(?___llmod)
  1532                           
  1533  0767  3000               	movlw	0
  1534  0768  00F3               	movwf	(?___lldiv+3)
  1535  0769  3000               	movlw	0
  1536  076A  00F2               	movwf	(?___lldiv+2)
  1537  076B  3000               	movlw	0
  1538  076C  00F1               	movwf	(?___lldiv+1)
  1539  076D  3064               	movlw	064h
  1540  076E  00F0               	movwf	(?___lldiv)
  1541                           
  1542  076F  0842               	movf	(main@temperature+3),w
  1543  0770  00F7               	movwf	3+(?___lldiv)+04h
  1544  0771  0841               	movf	(main@temperature+2),w
  1545  0772  00F6               	movwf	2+(?___lldiv)+04h
  1546  0773  0840               	movf	(main@temperature+1),w
  1547  0774  00F5               	movwf	1+(?___lldiv)+04h
  1548  0775  083F               	movf	(main@temperature),w
  1549  0776  00F4               	movwf	0+(?___lldiv)+04h
  1550                           
  1551  0777  3184  240C  3185   	fcall	___lldiv
  1552  077A  0873               	movf	(3+(?___lldiv)),w
  1553  077B  0020               	movlb 0	; select bank0
  1554  077C  00A7               	movwf	3+(?___llmod)+04h
  1555  077D  0872               	movf	(2+(?___lldiv)),w
  1556  077E  00A6               	movwf	2+(?___llmod)+04h
  1557  077F  0871               	movf	(1+(?___lldiv)),w
  1558  0780  00A5               	movwf	1+(?___llmod)+04h
  1559  0781  0870               	movf	(0+(?___lldiv)),w
  1560  0782  00A4               	movwf	0+(?___llmod)+04h
  1561                           
  1562  0783  3183  23B9  3185   	fcall	___llmod
  1563  0786  0020               	movlb 0	; select bank0
  1564  0787  0820               	movf	0+(((0+(?___llmod)))),w
  1565  0788  00AF               	movwf	(??_main+0)+0
  1566  0789  082F               	movf	(??_main+0)+0,w
  1567  078A  00B5               	movwf	(main@digit1)
  1568                           	line	313
  1569                           	
  1570  078B                     l4319:	
  1571                           ;main.c: 313: digit2 = (temperature / 10) % 10;
  1572  078B  3000               	movlw	0
  1573  078C  00A3               	movwf	(?___llmod+3)
  1574  078D  3000               	movlw	0
  1575  078E  00A2               	movwf	(?___llmod+2)
  1576  078F  3000               	movlw	0
  1577  0790  00A1               	movwf	(?___llmod+1)
  1578  0791  300A               	movlw	0Ah
  1579  0792  00A0               	movwf	(?___llmod)
  1580                           
  1581  0793  3000               	movlw	0
  1582  0794  00F3               	movwf	(?___lldiv+3)
  1583  0795  3000               	movlw	0
  1584  0796  00F2               	movwf	(?___lldiv+2)
  1585  0797  3000               	movlw	0
  1586  0798  00F1               	movwf	(?___lldiv+1)
  1587  0799  300A               	movlw	0Ah
  1588  079A  00F0               	movwf	(?___lldiv)
  1589                           
  1590  079B  0842               	movf	(main@temperature+3),w
  1591  079C  00F7               	movwf	3+(?___lldiv)+04h
  1592  079D  0841               	movf	(main@temperature+2),w
  1593  079E  00F6               	movwf	2+(?___lldiv)+04h
  1594  079F  0840               	movf	(main@temperature+1),w
  1595  07A0  00F5               	movwf	1+(?___lldiv)+04h
  1596  07A1  083F               	movf	(main@temperature),w
  1597  07A2  00F4               	movwf	0+(?___lldiv)+04h
  1598                           
  1599  07A3  3184  240C  3185   	fcall	___lldiv
  1600  07A6  0873               	movf	(3+(?___lldiv)),w
  1601  07A7  0020               	movlb 0	; select bank0
  1602  07A8  00A7               	movwf	3+(?___llmod)+04h
  1603  07A9  0872               	movf	(2+(?___lldiv)),w
  1604  07AA  00A6               	movwf	2+(?___llmod)+04h
  1605  07AB  0871               	movf	(1+(?___lldiv)),w
  1606  07AC  00A5               	movwf	1+(?___llmod)+04h
  1607  07AD  0870               	movf	(0+(?___lldiv)),w
  1608  07AE  00A4               	movwf	0+(?___llmod)+04h
  1609                           
  1610  07AF  3183  23B9  3185   	fcall	___llmod
  1611  07B2  0020               	movlb 0	; select bank0
  1612  07B3  0820               	movf	0+(((0+(?___llmod)))),w
  1613  07B4  00AF               	movwf	(??_main+0)+0
  1614  07B5  082F               	movf	(??_main+0)+0,w
  1615  07B6  00B6               	movwf	(main@digit2)
  1616                           	line	314
  1617                           	
  1618  07B7                     l4321:	
  1619                           ;main.c: 314: digit3 = temperature / 1000;
  1620  07B7  3000               	movlw	0
  1621  07B8  00F3               	movwf	(?___lldiv+3)
  1622  07B9  3000               	movlw	0
  1623  07BA  00F2               	movwf	(?___lldiv+2)
  1624  07BB  3003               	movlw	03h
  1625  07BC  00F1               	movwf	(?___lldiv+1)
  1626  07BD  30E8               	movlw	0E8h
  1627  07BE  00F0               	movwf	(?___lldiv)
  1628                           
  1629  07BF  0842               	movf	(main@temperature+3),w
  1630  07C0  00F7               	movwf	3+(?___lldiv)+04h
  1631  07C1  0841               	movf	(main@temperature+2),w
  1632  07C2  00F6               	movwf	2+(?___lldiv)+04h
  1633  07C3  0840               	movf	(main@temperature+1),w
  1634  07C4  00F5               	movwf	1+(?___lldiv)+04h
  1635  07C5  083F               	movf	(main@temperature),w
  1636  07C6  00F4               	movwf	0+(?___lldiv)+04h
  1637                           
  1638  07C7  3184  240C  3185   	fcall	___lldiv
  1639  07CA  0870               	movf	0+(((0+(?___lldiv)))),w
  1640  07CB  0020               	movlb 0	; select bank0
  1641  07CC  00AF               	movwf	(??_main+0)+0
  1642  07CD  082F               	movf	(??_main+0)+0,w
  1643  07CE  00B7               	movwf	(main@digit3)
  1644                           	line	316
  1645                           ;main.c: 316: if(readyToDisplay){
  1646  07CF  083C               	movf	(main@readyToDisplay),w
  1647  07D0  1D03               	skipz
  1648  07D1  2FD3               	goto	u770
  1649  07D2  2E07               	goto	l4279
  1650  07D3                     u770:
  1651                           	line	317
  1652                           	
  1653  07D3                     l4323:	
  1654                           ;main.c: 317: set_sevenseg(digit1);
  1655  07D3  0835               	movf	(main@digit1),w
  1656  07D4  3184  246E  3185   	fcall	_set_sevenseg
  1657                           	line	318
  1658                           	
  1659  07D7                     l4325:	
  1660                           ;main.c: 318: (LATAbits.LATA1 = 1);
  1661  07D7  0022               	movlb 2	; select bank2
  1662  07D8  148C               	bsf	(268)^0100h,1	;volatile
  1663                           	line	319
  1664                           	
  1665  07D9                     l4327:	
  1666                           ;main.c: 319: if(digit3){
  1667  07D9  0020               	movlb 0	; select bank0
  1668  07DA  0837               	movf	(main@digit3),w
  1669  07DB  1D03               	skipz
  1670  07DC  2FDE               	goto	u780
  1671  07DD  2FE2               	goto	l4331
  1672  07DE                     u780:
  1673                           	line	320
  1674                           	
  1675  07DE                     l4329:	
  1676                           ;main.c: 320: (LATAbits.LATA2 = 1, LATAbits.LATA3 = 1);
  1677  07DE  0022               	movlb 2	; select bank2
  1678  07DF  150C               	bsf	(268)^0100h,2	;volatile
  1679  07E0  158C               	bsf	(268)^0100h,3	;volatile
  1680  07E1  2FE2               	goto	l4331
  1681                           	line	321
  1682                           	
  1683  07E2                     l1611:	
  1684                           	line	322
  1685                           	
  1686  07E2                     l4331:	
  1687                           ;main.c: 321: }
  1688                           ;main.c: 322: delaysome();
  1689  07E2  3183  2366  3185   	fcall	_delaysome
  1690                           	line	324
  1691                           	
  1692  07E5                     l4333:	
  1693                           ;main.c: 324: (LATAbits.LATA1 = 0);
  1694  07E5  0022               	movlb 2	; select bank2
  1695  07E6  108C               	bcf	(268)^0100h,1	;volatile
  1696                           	line	325
  1697                           	
  1698  07E7                     l4335:	
  1699                           ;main.c: 325: (LATAbits.LATA2 = 0, LATAbits.LATA3 = 0);
  1700  07E7  110C               	bcf	(268)^0100h,2	;volatile
  1701                           	
  1702  07E8                     l4337:	
  1703  07E8  118C               	bcf	(268)^0100h,3	;volatile
  1704                           	line	326
  1705                           	
  1706  07E9                     l4339:	
  1707                           ;main.c: 326: set_sevenseg(digit2);
  1708  07E9  0020               	movlb 0	; select bank0
  1709  07EA  0836               	movf	(main@digit2),w
  1710  07EB  3184  246E  3185   	fcall	_set_sevenseg
  1711                           	line	327
  1712                           	
  1713  07EE                     l4341:	
  1714                           ;main.c: 327: (LATAbits.LATA7 = 1);
  1715  07EE  0022               	movlb 2	; select bank2
  1716  07EF  178C               	bsf	(268)^0100h,7	;volatile
  1717                           	line	328
  1718                           	
  1719  07F0                     l4343:	
  1720                           ;main.c: 328: delaysome();
  1721  07F0  3183  2366  3185   	fcall	_delaysome
  1722                           	line	329
  1723                           	
  1724  07F3                     l4345:	
  1725                           ;main.c: 329: (LATAbits.LATA7 = 0);
  1726  07F3  0022               	movlb 2	; select bank2
  1727  07F4  138C               	bcf	(268)^0100h,7	;volatile
  1728                           	line	330
  1729                           	
  1730  07F5                     l4347:	
  1731                           ;main.c: 330: delaysome();
  1732  07F5  3183  2366  3185   	fcall	_delaysome
  1733                           	line	331
  1734                           	
  1735  07F8                     l4349:	
  1736                           ;main.c: 331: delaysome();
  1737  07F8  3183  2366  3185   	fcall	_delaysome
  1738  07FB  2E07               	goto	l4279
  1739                           	line	332
  1740                           	
  1741  07FC                     l1610:	
  1742  07FC  2E07               	goto	l4279
  1743                           	line	333
  1744                           	
  1745  07FD                     l1612:	
  1746                           	line	275
  1747  07FD  2E07               	goto	l4279
  1748                           	
  1749  07FE                     l1613:	
  1750                           	line	336
  1751                           ;main.c: 332: }
  1752                           ;main.c: 333: }
  1753                           ;main.c: 335: return (0);
  1754                           ;	Return value of _main is never used
  1755                           	
  1756  07FE                     l1614:	
  1757                           	global	start
  1758  07FE  3180  2802         	ljmp	start
  1759                           	opt stack 0
  1760                           GLOBAL	__end_of_main
  1761  0800                     	__end_of_main:
  1762                           	signat	_main,8314
  1763                           	global	_config_port
  1764                           
  1765 ;; *************** function _config_port *****************
  1766 ;; Defined at:
  1767 ;;		line 43 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, status,2
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1781 ;;      Params:         0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           psect	text205,local,class=CODE,delta=2,merge=1
  1794                           global __ptext205
  1795  033A                     __ptext205:	;psect for function _config_port
  1796                           psect	text205
  1797                           	file	"main.c"
  1798                           	line	43
  1799                           	global	__size_of_config_port
  1800  0013                     	__size_of_config_port	equ	__end_of_config_port-_config_port
  1801                           	
  1802  033A                     _config_port:	
  1803                           	opt	stack 15
  1804                           ; Regs used in _config_port: [wreg+status,2]
  1805                           	line	45
  1806                           	
  1807  033A                     l4095:	
  1808                           ;main.c: 45: PORTA = 0;
  1809  033A  0020               	movlb 0	; select bank0
  1810  033B  018C               	clrf	(12)	;volatile
  1811                           	line	46
  1812                           ;main.c: 46: LATA = 0;
  1813  033C  0022               	movlb 2	; select bank2
  1814  033D  018C               	clrf	(268)^0100h	;volatile
  1815                           	line	47
  1816                           ;main.c: 47: ANSELA = 0;
  1817  033E  0023               	movlb 3	; select bank3
  1818  033F  018C               	clrf	(396)^0180h	;volatile
  1819                           	line	48
  1820                           	
  1821  0340                     l4097:	
  1822                           ;main.c: 48: TRISA = 0b00100000;
  1823  0340  3020               	movlw	(020h)
  1824  0341  0021               	movlb 1	; select bank1
  1825  0342  008C               	movwf	(140)^080h	;volatile
  1826                           	line	50
  1827                           	
  1828  0343                     l4099:	
  1829                           ;main.c: 50: PORTB = 0;
  1830  0343  0020               	movlb 0	; select bank0
  1831  0344  018D               	clrf	(13)	;volatile
  1832                           	line	51
  1833                           	
  1834  0345                     l4101:	
  1835                           ;main.c: 51: LATB = 0;
  1836  0345  0022               	movlb 2	; select bank2
  1837  0346  018D               	clrf	(269)^0100h	;volatile
  1838                           	line	52
  1839                           	
  1840  0347                     l4103:	
  1841                           ;main.c: 52: TRISB = 0b11010000;
  1842  0347  30D0               	movlw	(0D0h)
  1843  0348  0021               	movlb 1	; select bank1
  1844  0349  008D               	movwf	(141)^080h	;volatile
  1845                           	line	53
  1846                           	
  1847  034A                     l4105:	
  1848                           ;main.c: 53: ANSELBbits.ANSB4 = 1;
  1849  034A  0023               	movlb 3	; select bank3
  1850  034B  160D               	bsf	(397)^0180h,4	;volatile
  1851                           	line	54
  1852                           	
  1853  034C                     l1555:	
  1854  034C  0008               	return
  1855                           	opt stack 0
  1856                           GLOBAL	__end_of_config_port
  1857  034D                     	__end_of_config_port:
  1858                           	signat	_config_port,88
  1859                           	global	_config_clock
  1860                           
  1861 ;; *************** function _config_clock *****************
  1862 ;; Defined at:
  1863 ;;		line 58 in file "main.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1877 ;;      Params:         0       0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           psect	text206,local,class=CODE,delta=2,merge=1
  1890                           global __ptext206
  1891  0323                     __ptext206:	;psect for function _config_clock
  1892                           psect	text206
  1893                           	file	"main.c"
  1894                           	line	58
  1895                           	global	__size_of_config_clock
  1896  0004                     	__size_of_config_clock	equ	__end_of_config_clock-_config_clock
  1897                           	
  1898  0323                     _config_clock:	
  1899                           	opt	stack 15
  1900                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  1901                           	line	59
  1902                           	
  1903  0323                     l4107:	
  1904                           ;main.c: 59: OSCCONbits.IRCF = 0b1111;
  1905  0323  3078               	movlw	(0Fh & ((1<<4)-1))<<3
  1906  0324  0021               	movlb 1	; select bank1
  1907  0325  0499               	iorwf	(153)^080h,f	;volatile
  1908                           	line	61
  1909                           	
  1910  0326                     l1558:	
  1911  0326  0008               	return
  1912                           	opt stack 0
  1913                           GLOBAL	__end_of_config_clock
  1914  0327                     	__end_of_config_clock:
  1915                           	signat	_config_clock,88
  1916                           	global	_config_adc
  1917                           
  1918 ;; *************** function _config_adc *****************
  1919 ;; Defined at:
  1920 ;;		line 65 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  adcCal          1    wreg     PTR unsigned long 
  1923 ;;		 -> main@adc(43), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  adcCal          1    4[BANK0 ] PTR unsigned long 
  1926 ;;		 -> main@adc(43), 
  1927 ;;  microV_Count    4    5[BANK0 ] unsigned long 
  1928 ;;  measureFvr      2    9[BANK0 ] unsigned int 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1938 ;;      Params:         0       0       0       0       0       0
  1939 ;;      Locals:         0       7       0       0       0       0
  1940 ;;      Temps:          0       4       0       0       0       0
  1941 ;;      Totals:         0      11       0       0       0       0
  1942 ;;Total ram usage:       11 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    1
  1945 ;; This function calls:
  1946 ;;		___lldiv
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           psect	text207,local,class=CODE,delta=2,merge=1
  1952                           global __ptext207
  1953  04E7                     __ptext207:	;psect for function _config_adc
  1954                           psect	text207
  1955                           	file	"main.c"
  1956                           	line	65
  1957                           	global	__size_of_config_adc
  1958  009A                     	__size_of_config_adc	equ	__end_of_config_adc-_config_adc
  1959                           	
  1960  04E7                     _config_adc:	
  1961                           	opt	stack 14
  1962                           ; Regs used in _config_adc: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
  1963                           ;config_adc@adcCal stored from wreg
  1964                           	line	67
  1965  04E7  0020               	movlb 0	; select bank0
  1966  04E8  00A4               	movwf	(config_adc@adcCal)
  1967                           	
  1968  04E9                     l4173:	
  1969                           ;main.c: 66: unsigned int measureFvr;
  1970                           ;main.c: 67: unsigned long microV_Count = 2095104000;
  1971  04E9  307C               	movlw	07Ch
  1972  04EA  00A8               	movwf	(config_adc@microV_Count+3)
  1973  04EB  30E0               	movlw	0E0h
  1974  04EC  00A7               	movwf	(config_adc@microV_Count+2)
  1975  04ED  30C0               	movlw	0C0h
  1976  04EE  00A6               	movwf	(config_adc@microV_Count+1)
  1977  04EF  3000               	movlw	0
  1978  04F0  00A5               	movwf	(config_adc@microV_Count)
  1979                           
  1980                           	line	70
  1981                           	
  1982  04F1                     l4175:	
  1983                           ;main.c: 70: ADCON0bits.ADON = 0;
  1984  04F1  0021               	movlb 1	; select bank1
  1985  04F2  101D               	bcf	(157)^080h,0	;volatile
  1986                           	line	71
  1987                           	
  1988  04F3                     l4177:	
  1989                           ;main.c: 71: FVRCONbits.ADFVR = 0b10;
  1990  04F3  0022               	movlb 2	; select bank2
  1991  04F4  0817               	movf	(279)^0100h,w	;volatile
  1992  04F5  39FC               	andlw	not (((1<<2)-1)<<0)
  1993  04F6  3802               	iorlw	(02h & ((1<<2)-1))<<0
  1994  04F7  0097               	movwf	(279)^0100h	;volatile
  1995                           	line	72
  1996                           	
  1997  04F8                     l4179:	
  1998                           ;main.c: 72: FVRCONbits.FVREN = 1;
  1999  04F8  1797               	bsf	(279)^0100h,7	;volatile
  2000                           	line	75
  2001                           	
  2002  04F9                     l4181:	
  2003                           ;main.c: 75: ADCON1bits.ADNREF = 0;
  2004  04F9  0021               	movlb 1	; select bank1
  2005  04FA  111E               	bcf	(158)^080h,2	;volatile
  2006                           	line	76
  2007                           	
  2008  04FB                     l4183:	
  2009                           ;main.c: 76: ADCON1bits.ADPREF = 0b00;
  2010  04FB  30FC               	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  2011  04FC  059E               	andwf	(158)^080h,f	;volatile
  2012                           	line	77
  2013                           	
  2014  04FD                     l4185:	
  2015                           ;main.c: 77: ADCON1bits.ADCS = 0b101;
  2016  04FD  081E               	movf	(158)^080h,w	;volatile
  2017  04FE  398F               	andlw	not (((1<<3)-1)<<4)
  2018  04FF  3850               	iorlw	(05h & ((1<<3)-1))<<4
  2019  0500  009E               	movwf	(158)^080h	;volatile
  2020                           	line	78
  2021                           	
  2022  0501                     l4187:	
  2023                           ;main.c: 78: ADCON1bits.ADFM = 1;
  2024  0501  179E               	bsf	(158)^080h,7	;volatile
  2025                           	line	80
  2026                           	
  2027  0502                     l4189:	
  2028                           ;main.c: 80: ADCON0bits.CHS = 0b11111;
  2029  0502  307C               	movlw	(01Fh & ((1<<5)-1))<<2
  2030  0503  049D               	iorwf	(157)^080h,f	;volatile
  2031                           	line	81
  2032                           	
  2033  0504                     l4191:	
  2034                           ;main.c: 81: ADCON0bits.ADON = 1;
  2035  0504  141D               	bsf	(157)^080h,0	;volatile
  2036                           	line	84
  2037                           	
  2038  0505                     l4193:	
  2039                           ;main.c: 84: for(measureFvr=0;measureFvr<20;measureFvr++){
  2040  0505  0020               	movlb 0	; select bank0
  2041  0506  01A9               	clrf	(config_adc@measureFvr)
  2042  0507  01AA               	clrf	(config_adc@measureFvr+1)
  2043                           	
  2044  0508                     l4195:	
  2045  0508  3000               	movlw	high(014h)
  2046  0509  022A               	subwf	(config_adc@measureFvr+1),w
  2047  050A  3014               	movlw	low(014h)
  2048  050B  1903               	skipnz
  2049  050C  0229               	subwf	(config_adc@measureFvr),w
  2050  050D  1C03               	skipc
  2051  050E  2D10               	goto	u551
  2052  050F  2D11               	goto	u550
  2053  0510                     u551:
  2054  0510  2D13               	goto	l4199
  2055  0511                     u550:
  2056  0511  2D20               	goto	l1562
  2057                           	
  2058  0512                     l4197:	
  2059  0512  2D20               	goto	l1562
  2060                           	
  2061  0513                     l1561:	
  2062                           	
  2063  0513                     l4199:	
  2064  0513  3001               	movlw	low(01h)
  2065  0514  07A9               	addwf	(config_adc@measureFvr),f
  2066  0515  3000               	movlw	high(01h)
  2067  0516  3DAA               	addwfc	(config_adc@measureFvr+1),f
  2068  0517  3000               	movlw	high(014h)
  2069  0518  022A               	subwf	(config_adc@measureFvr+1),w
  2070  0519  3014               	movlw	low(014h)
  2071  051A  1903               	skipnz
  2072  051B  0229               	subwf	(config_adc@measureFvr),w
  2073  051C  1C03               	skipc
  2074  051D  2D1F               	goto	u561
  2075  051E  2D20               	goto	u560
  2076  051F                     u561:
  2077  051F  2D13               	goto	l4199
  2078  0520                     u560:
  2079                           	
  2080  0520                     l1562:	
  2081                           	line	87
  2082                           ;main.c: 85: }
  2083                           ;main.c: 87: ADCON0bits.GO = 1;
  2084  0520  0021               	movlb 1	; select bank1
  2085  0521  149D               	bsf	(157)^080h,1	;volatile
  2086                           	line	88
  2087                           ;main.c: 88: while (ADCON0bits.GO);
  2088  0522  2D23               	goto	l1563
  2089                           	
  2090  0523                     l1564:	
  2091                           	
  2092  0523                     l1563:	
  2093  0523  189D               	btfsc	(157)^080h,1	;volatile
  2094  0524  2D26               	goto	u571
  2095  0525  2D27               	goto	u570
  2096  0526                     u571:
  2097  0526  2D23               	goto	l1563
  2098  0527                     u570:
  2099  0527  2D28               	goto	l4201
  2100                           	
  2101  0528                     l1565:	
  2102                           	line	89
  2103                           	
  2104  0528                     l4201:	
  2105                           ;main.c: 89: measureFvr = ((ADRESH << 8 ) + ADRESL);
  2106  0528  081B               	movf	(155)^080h,w	;volatile
  2107  0529  0020               	movlb 0	; select bank0
  2108  052A  00A0               	movwf	(??_config_adc+0)+0+0
  2109  052B  01A1               	clrf	(??_config_adc+0)+0+1
  2110  052C  0021               	movlb 1	; select bank1
  2111  052D  081C               	movf	(156)^080h,w	;volatile
  2112  052E  0020               	movlb 0	; select bank0
  2113  052F  00A2               	movwf	(??_config_adc+2)+0+0
  2114  0530  01A3               	clrf	(??_config_adc+2)+0+1
  2115  0531  0822               	movf	(??_config_adc+2)+0,w
  2116  0532  00A3               	movwf	(??_config_adc+2)+1
  2117  0533  01A2               	clrf	(??_config_adc+2)+0
  2118  0534  0820               	movf	0+(??_config_adc+0)+0,w
  2119  0535  0722               	addwf	0+(??_config_adc+2)+0,w
  2120  0536  00A9               	movwf	(config_adc@measureFvr)
  2121  0537  0821               	movf	1+(??_config_adc+0)+0,w
  2122  0538  3D23               	addwfc	1+(??_config_adc+2)+0,w
  2123  0539  00AA               	movwf	1+(config_adc@measureFvr)
  2124                           	line	92
  2125                           	
  2126  053A                     l4203:	
  2127                           ;main.c: 92: microV_Count = microV_Count / measureFvr;
  2128  053A  0829               	movf	(config_adc@measureFvr),w
  2129  053B  00F0               	movwf	(?___lldiv)
  2130  053C  082A               	movf	(config_adc@measureFvr+1),w
  2131  053D  00F1               	movwf	((?___lldiv))+1
  2132  053E  01F2               	clrf	2+((?___lldiv))
  2133  053F  01F3               	clrf	3+((?___lldiv))
  2134  0540  0828               	movf	(config_adc@microV_Count+3),w
  2135  0541  00F7               	movwf	3+(?___lldiv)+04h
  2136  0542  0827               	movf	(config_adc@microV_Count+2),w
  2137  0543  00F6               	movwf	2+(?___lldiv)+04h
  2138  0544  0826               	movf	(config_adc@microV_Count+1),w
  2139  0545  00F5               	movwf	1+(?___lldiv)+04h
  2140  0546  0825               	movf	(config_adc@microV_Count),w
  2141  0547  00F4               	movwf	0+(?___lldiv)+04h
  2142                           
  2143  0548  3184  240C  3184   	fcall	___lldiv
  2144  054B  0873               	movf	(3+(?___lldiv)),w
  2145  054C  0020               	movlb 0	; select bank0
  2146  054D  00A8               	movwf	(config_adc@microV_Count+3)
  2147  054E  0872               	movf	(2+(?___lldiv)),w
  2148  054F  00A7               	movwf	(config_adc@microV_Count+2)
  2149  0550  0871               	movf	(1+(?___lldiv)),w
  2150  0551  00A6               	movwf	(config_adc@microV_Count+1)
  2151  0552  0870               	movf	(0+(?___lldiv)),w
  2152  0553  00A5               	movwf	(config_adc@microV_Count)
  2153                           
  2154                           	line	96
  2155                           	
  2156  0554                     l4205:	
  2157                           ;main.c: 96: *adcCal = microV_Count;
  2158  0554  0824               	movf	(config_adc@adcCal),w
  2159  0555  0086               	movwf	fsr1l
  2160  0556  0187               	clrf fsr1h	
  2161                           	
  2162  0557  0825               	movf	(config_adc@microV_Count),w
  2163  0558  3FC0               	movwi	[0]fsr1
  2164  0559  0826               	movf	(config_adc@microV_Count+1),w
  2165  055A  3FC1               	movwi	[1]fsr1
  2166  055B  0827               	movf	(config_adc@microV_Count+2),w
  2167  055C  3FC2               	movwi	[2]fsr1
  2168  055D  0828               	movf	(config_adc@microV_Count+3),w
  2169  055E  3FC3               	movwi	[3]fsr1
  2170                           	line	98
  2171                           	
  2172  055F                     l4207:	
  2173                           ;main.c: 98: ADCON0bits.CHS = 0b01000;
  2174  055F  0021               	movlb 1	; select bank1
  2175  0560  081D               	movf	(157)^080h,w	;volatile
  2176  0561  3983               	andlw	not (((1<<5)-1)<<2)
  2177  0562  3820               	iorlw	(08h & ((1<<5)-1))<<2
  2178  0563  009D               	movwf	(157)^080h	;volatile
  2179                           	line	100
  2180                           	
  2181  0564                     l4209:	
  2182                           ;main.c: 100: for(measureFvr=0;measureFvr<20;measureFvr++){
  2183  0564  0020               	movlb 0	; select bank0
  2184  0565  01A9               	clrf	(config_adc@measureFvr)
  2185  0566  01AA               	clrf	(config_adc@measureFvr+1)
  2186                           	
  2187  0567                     l4211:	
  2188  0567  3000               	movlw	high(014h)
  2189  0568  022A               	subwf	(config_adc@measureFvr+1),w
  2190  0569  3014               	movlw	low(014h)
  2191  056A  1903               	skipnz
  2192  056B  0229               	subwf	(config_adc@measureFvr),w
  2193  056C  1C03               	skipc
  2194  056D  2D6F               	goto	u581
  2195  056E  2D70               	goto	u580
  2196  056F                     u581:
  2197  056F  2D72               	goto	l4215
  2198  0570                     u580:
  2199  0570  2D80               	goto	l1568
  2200                           	
  2201  0571                     l4213:	
  2202  0571  2D80               	goto	l1568
  2203                           	
  2204  0572                     l1566:	
  2205                           	
  2206  0572                     l4215:	
  2207  0572  3001               	movlw	low(01h)
  2208  0573  07A9               	addwf	(config_adc@measureFvr),f
  2209  0574  3000               	movlw	high(01h)
  2210  0575  3DAA               	addwfc	(config_adc@measureFvr+1),f
  2211  0576  3000               	movlw	high(014h)
  2212  0577  022A               	subwf	(config_adc@measureFvr+1),w
  2213  0578  3014               	movlw	low(014h)
  2214  0579  1903               	skipnz
  2215  057A  0229               	subwf	(config_adc@measureFvr),w
  2216  057B  1C03               	skipc
  2217  057C  2D7E               	goto	u591
  2218  057D  2D7F               	goto	u590
  2219  057E                     u591:
  2220  057E  2D72               	goto	l4215
  2221  057F                     u590:
  2222  057F  2D80               	goto	l1568
  2223                           	
  2224  0580                     l1567:	
  2225                           	line	102
  2226                           	
  2227  0580                     l1568:	
  2228  0580  0008               	return
  2229                           	opt stack 0
  2230                           GLOBAL	__end_of_config_adc
  2231  0581                     	__end_of_config_adc:
  2232                           	signat	_config_adc,4216
  2233                           	global	_ADCRead
  2234                           
  2235 ;; *************** function _ADCRead *****************
  2236 ;; Defined at:
  2237 ;;		line 107 in file "main.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    0[COMMON] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, btemp+1
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2251 ;;      Params:         2       0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0
  2253 ;;      Temps:          4       0       0       0       0       0
  2254 ;;      Totals:         6       0       0       0       0       0
  2255 ;;Total ram usage:        6 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           psect	text208,local,class=CODE,delta=2,merge=1
  2264                           global __ptext208
  2265  034D                     __ptext208:	;psect for function _ADCRead
  2266                           psect	text208
  2267                           	file	"main.c"
  2268                           	line	107
  2269                           	global	__size_of_ADCRead
  2270  0019                     	__size_of_ADCRead	equ	__end_of_ADCRead-_ADCRead
  2271                           	
  2272  034D                     _ADCRead:	
  2273                           	opt	stack 15
  2274                           ; Regs used in _ADCRead: [wreg+status,2+status,0+btemp+1]
  2275                           	line	108
  2276                           	
  2277  034D                     l4109:	
  2278                           ;main.c: 108: ADCON0bits.GO = 1;
  2279  034D  0021               	movlb 1	; select bank1
  2280  034E  149D               	bsf	(157)^080h,1	;volatile
  2281                           	line	109
  2282                           ;main.c: 109: while (ADCON0bits.GO);
  2283  034F  2B50               	goto	l1571
  2284                           	
  2285  0350                     l1572:	
  2286                           	
  2287  0350                     l1571:	
  2288  0350  189D               	btfsc	(157)^080h,1	;volatile
  2289  0351  2B53               	goto	u401
  2290  0352  2B54               	goto	u400
  2291  0353                     u401:
  2292  0353  2B50               	goto	l1571
  2293  0354                     u400:
  2294  0354  2B55               	goto	l4111
  2295                           	
  2296  0355                     l1573:	
  2297                           	line	110
  2298                           	
  2299  0355                     l4111:	
  2300                           ;main.c: 110: return ((ADRESH << 8 ) + ADRESL);
  2301  0355  081B               	movf	(155)^080h,w	;volatile
  2302  0356  00F2               	movwf	(??_ADCRead+0)+0+0
  2303  0357  01F3               	clrf	(??_ADCRead+0)+0+1
  2304  0358  081C               	movf	(156)^080h,w	;volatile
  2305  0359  00F4               	movwf	(??_ADCRead+2)+0+0
  2306  035A  01F5               	clrf	(??_ADCRead+2)+0+1
  2307  035B  0874               	movf	(??_ADCRead+2)+0,w
  2308  035C  00F5               	movwf	(??_ADCRead+2)+1
  2309  035D  01F4               	clrf	(??_ADCRead+2)+0
  2310  035E  0872               	movf	0+(??_ADCRead+0)+0,w
  2311  035F  0774               	addwf	0+(??_ADCRead+2)+0,w
  2312  0360  00F0               	movwf	(?_ADCRead)
  2313  0361  0873               	movf	1+(??_ADCRead+0)+0,w
  2314  0362  3D75               	addwfc	1+(??_ADCRead+2)+0,w
  2315  0363  00F1               	movwf	1+(?_ADCRead)
  2316  0364  2B65               	goto	l1574
  2317                           	
  2318  0365                     l4113:	
  2319                           	line	111
  2320                           	
  2321  0365                     l1574:	
  2322  0365  0008               	return
  2323                           	opt stack 0
  2324                           GLOBAL	__end_of_ADCRead
  2325  0366                     	__end_of_ADCRead:
  2326                           	signat	_ADCRead,90
  2327                           	global	_set_sevenseg
  2328                           
  2329 ;; *************** function _set_sevenseg *****************
  2330 ;; Defined at:
  2331 ;;		line 115 in file "main.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  digit           1    wreg     unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  digit           1    0[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;		None               void
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2345 ;;      Params:         0       0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0
  2348 ;;      Totals:         1       0       0       0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           psect	text209,local,class=CODE,delta=2,merge=1
  2358                           global __ptext209
  2359  046E                     __ptext209:	;psect for function _set_sevenseg
  2360                           psect	text209
  2361                           	file	"main.c"
  2362                           	line	115
  2363                           	global	__size_of_set_sevenseg
  2364  0079                     	__size_of_set_sevenseg	equ	__end_of_set_sevenseg-_set_sevenseg
  2365                           	
  2366  046E                     _set_sevenseg:	
  2367                           	opt	stack 15
  2368                           ; Regs used in _set_sevenseg: [wreg-fsr0h+status,2+status,0]
  2369                           ;set_sevenseg@digit stored from wreg
  2370                           	line	117
  2371  046E  00F0               	movwf	(set_sevenseg@digit)
  2372                           	
  2373  046F                     l4115:	
  2374                           ;main.c: 117: if(digit > 9){
  2375  046F  300A               	movlw	(0Ah)
  2376  0470  0270               	subwf	(set_sevenseg@digit),w
  2377  0471  1C03               	skipc
  2378  0472  2C74               	goto	u411
  2379  0473  2C75               	goto	u410
  2380  0474                     u411:
  2381  0474  2CDC               	goto	l4121
  2382  0475                     u410:
  2383  0475  2CE6               	goto	l1578
  2384                           	line	118
  2385                           	
  2386  0476                     l4117:	
  2387                           ;main.c: 118: return;
  2388  0476  2CE6               	goto	l1578
  2389                           	line	119
  2390                           	
  2391  0477                     l1577:	
  2392                           	line	121
  2393                           ;main.c: 119: }
  2394                           ;main.c: 121: switch(digit){
  2395  0477  2CDC               	goto	l4121
  2396                           	line	122
  2397                           ;main.c: 122: default:
  2398                           	
  2399  0478                     l1580:	
  2400                           	line	123
  2401                           ;main.c: 123: LATBbits.LATB1 = 0;
  2402  0478  0022               	movlb 2	; select bank2
  2403  0479  108D               	bcf	(269)^0100h,1	;volatile
  2404                           	line	124
  2405                           ;main.c: 124: LATBbits.LATB3 = 0;
  2406  047A  118D               	bcf	(269)^0100h,3	;volatile
  2407                           	line	125
  2408                           ;main.c: 125: LATAbits.LATA6 = 0;
  2409  047B  130C               	bcf	(268)^0100h,6	;volatile
  2410                           	line	126
  2411                           ;main.c: 126: LATBbits.LATB5 = 0;
  2412  047C  128D               	bcf	(269)^0100h,5	;volatile
  2413                           	line	127
  2414                           ;main.c: 127: LATAbits.LATA4 = 0;
  2415  047D  120C               	bcf	(268)^0100h,4	;volatile
  2416                           	line	128
  2417                           ;main.c: 128: LATBbits.LATB2 = 0;
  2418  047E  110D               	bcf	(269)^0100h,2	;volatile
  2419                           	line	129
  2420                           ;main.c: 129: LATBbits.LATB0 = 0;
  2421  047F  100D               	bcf	(269)^0100h,0	;volatile
  2422                           	line	130
  2423                           ;main.c: 130: break;
  2424  0480  2CE6               	goto	l1578
  2425                           	line	131
  2426                           ;main.c: 131: case 0:
  2427                           	
  2428  0481                     l1582:	
  2429                           	line	132
  2430                           ;main.c: 132: LATBbits.LATB1 = 1;
  2431  0481  0022               	movlb 2	; select bank2
  2432  0482  148D               	bsf	(269)^0100h,1	;volatile
  2433                           	line	133
  2434                           ;main.c: 133: LATBbits.LATB3 = 1;
  2435  0483  158D               	bsf	(269)^0100h,3	;volatile
  2436                           	line	134
  2437                           ;main.c: 134: LATAbits.LATA6 = 1;
  2438  0484  170C               	bsf	(268)^0100h,6	;volatile
  2439                           	line	135
  2440                           ;main.c: 135: LATBbits.LATB5 = 1;
  2441  0485  168D               	bsf	(269)^0100h,5	;volatile
  2442                           	line	136
  2443                           ;main.c: 136: LATAbits.LATA4 = 1;
  2444  0486  160C               	bsf	(268)^0100h,4	;volatile
  2445                           	line	137
  2446                           ;main.c: 137: LATBbits.LATB2 = 1;
  2447  0487  150D               	bsf	(269)^0100h,2	;volatile
  2448                           	line	138
  2449                           ;main.c: 138: LATBbits.LATB0 = 0;
  2450  0488  100D               	bcf	(269)^0100h,0	;volatile
  2451                           	line	139
  2452                           ;main.c: 139: break;
  2453  0489  2CE6               	goto	l1578
  2454                           	line	140
  2455                           ;main.c: 140: case 1:
  2456                           	
  2457  048A                     l1583:	
  2458                           	line	141
  2459                           ;main.c: 141: LATBbits.LATB1 = 0;
  2460  048A  0022               	movlb 2	; select bank2
  2461  048B  108D               	bcf	(269)^0100h,1	;volatile
  2462                           	line	142
  2463                           ;main.c: 142: LATBbits.LATB3 = 1;
  2464  048C  158D               	bsf	(269)^0100h,3	;volatile
  2465                           	line	143
  2466                           ;main.c: 143: LATAbits.LATA6 = 1;
  2467  048D  170C               	bsf	(268)^0100h,6	;volatile
  2468                           	line	144
  2469                           ;main.c: 144: LATBbits.LATB5 = 0;
  2470  048E  128D               	bcf	(269)^0100h,5	;volatile
  2471                           	line	145
  2472                           ;main.c: 145: LATAbits.LATA4 = 0;
  2473  048F  120C               	bcf	(268)^0100h,4	;volatile
  2474                           	line	146
  2475                           ;main.c: 146: LATBbits.LATB2 = 0;
  2476  0490  110D               	bcf	(269)^0100h,2	;volatile
  2477                           	line	147
  2478                           ;main.c: 147: LATBbits.LATB0 = 0;
  2479  0491  100D               	bcf	(269)^0100h,0	;volatile
  2480                           	line	148
  2481                           ;main.c: 148: break;
  2482  0492  2CE6               	goto	l1578
  2483                           	line	149
  2484                           ;main.c: 149: case 2:
  2485                           	
  2486  0493                     l1584:	
  2487                           	line	150
  2488                           ;main.c: 150: LATBbits.LATB1 = 1;
  2489  0493  0022               	movlb 2	; select bank2
  2490  0494  148D               	bsf	(269)^0100h,1	;volatile
  2491                           	line	151
  2492                           ;main.c: 151: LATBbits.LATB3 = 1;
  2493  0495  158D               	bsf	(269)^0100h,3	;volatile
  2494                           	line	152
  2495                           ;main.c: 152: LATAbits.LATA6 = 0;
  2496  0496  130C               	bcf	(268)^0100h,6	;volatile
  2497                           	line	153
  2498                           ;main.c: 153: LATBbits.LATB5 = 1;
  2499  0497  168D               	bsf	(269)^0100h,5	;volatile
  2500                           	line	154
  2501                           ;main.c: 154: LATAbits.LATA4 = 1;
  2502  0498  160C               	bsf	(268)^0100h,4	;volatile
  2503                           	line	155
  2504                           ;main.c: 155: LATBbits.LATB2 = 0;
  2505  0499  110D               	bcf	(269)^0100h,2	;volatile
  2506                           	line	156
  2507                           ;main.c: 156: LATBbits.LATB0 = 1;
  2508  049A  140D               	bsf	(269)^0100h,0	;volatile
  2509                           	line	157
  2510                           ;main.c: 157: break;
  2511  049B  2CE6               	goto	l1578
  2512                           	line	158
  2513                           ;main.c: 158: case 3:
  2514                           	
  2515  049C                     l1585:	
  2516                           	line	159
  2517                           ;main.c: 159: LATBbits.LATB1 = 1;
  2518  049C  0022               	movlb 2	; select bank2
  2519  049D  148D               	bsf	(269)^0100h,1	;volatile
  2520                           	line	160
  2521                           ;main.c: 160: LATBbits.LATB3 = 1;
  2522  049E  158D               	bsf	(269)^0100h,3	;volatile
  2523                           	line	161
  2524                           ;main.c: 161: LATAbits.LATA6 = 1;
  2525  049F  170C               	bsf	(268)^0100h,6	;volatile
  2526                           	line	162
  2527                           ;main.c: 162: LATBbits.LATB5 = 1;
  2528  04A0  168D               	bsf	(269)^0100h,5	;volatile
  2529                           	line	163
  2530                           ;main.c: 163: LATAbits.LATA4 = 0;
  2531  04A1  120C               	bcf	(268)^0100h,4	;volatile
  2532                           	line	164
  2533                           ;main.c: 164: LATBbits.LATB2 = 0;
  2534  04A2  110D               	bcf	(269)^0100h,2	;volatile
  2535                           	line	165
  2536                           ;main.c: 165: LATBbits.LATB0 = 1;
  2537  04A3  140D               	bsf	(269)^0100h,0	;volatile
  2538                           	line	166
  2539                           ;main.c: 166: break;
  2540  04A4  2CE6               	goto	l1578
  2541                           	line	167
  2542                           ;main.c: 167: case 4:
  2543                           	
  2544  04A5                     l1586:	
  2545                           	line	168
  2546                           ;main.c: 168: LATBbits.LATB1 = 0;
  2547  04A5  0022               	movlb 2	; select bank2
  2548  04A6  108D               	bcf	(269)^0100h,1	;volatile
  2549                           	line	169
  2550                           ;main.c: 169: LATBbits.LATB3 = 1;
  2551  04A7  158D               	bsf	(269)^0100h,3	;volatile
  2552                           	line	170
  2553                           ;main.c: 170: LATAbits.LATA6 = 1;
  2554  04A8  170C               	bsf	(268)^0100h,6	;volatile
  2555                           	line	171
  2556                           ;main.c: 171: LATBbits.LATB5 = 0;
  2557  04A9  128D               	bcf	(269)^0100h,5	;volatile
  2558                           	line	172
  2559                           ;main.c: 172: LATAbits.LATA4 = 0;
  2560  04AA  120C               	bcf	(268)^0100h,4	;volatile
  2561                           	line	173
  2562                           ;main.c: 173: LATBbits.LATB2 = 1;
  2563  04AB  150D               	bsf	(269)^0100h,2	;volatile
  2564                           	line	174
  2565                           ;main.c: 174: LATBbits.LATB0 = 1;
  2566  04AC  140D               	bsf	(269)^0100h,0	;volatile
  2567                           	line	175
  2568                           ;main.c: 175: break;
  2569  04AD  2CE6               	goto	l1578
  2570                           	line	176
  2571                           ;main.c: 176: case 5:
  2572                           	
  2573  04AE                     l1587:	
  2574                           	line	177
  2575                           ;main.c: 177: LATBbits.LATB1 = 1;
  2576  04AE  0022               	movlb 2	; select bank2
  2577  04AF  148D               	bsf	(269)^0100h,1	;volatile
  2578                           	line	178
  2579                           ;main.c: 178: LATBbits.LATB3 = 0;
  2580  04B0  118D               	bcf	(269)^0100h,3	;volatile
  2581                           	line	179
  2582                           ;main.c: 179: LATAbits.LATA6 = 1;
  2583  04B1  170C               	bsf	(268)^0100h,6	;volatile
  2584                           	line	180
  2585                           ;main.c: 180: LATBbits.LATB5 = 1;
  2586  04B2  168D               	bsf	(269)^0100h,5	;volatile
  2587                           	line	181
  2588                           ;main.c: 181: LATAbits.LATA4 = 0;
  2589  04B3  120C               	bcf	(268)^0100h,4	;volatile
  2590                           	line	182
  2591                           ;main.c: 182: LATBbits.LATB2 = 1;
  2592  04B4  150D               	bsf	(269)^0100h,2	;volatile
  2593                           	line	183
  2594                           ;main.c: 183: LATBbits.LATB0 = 1;
  2595  04B5  140D               	bsf	(269)^0100h,0	;volatile
  2596                           	line	184
  2597                           ;main.c: 184: break;
  2598  04B6  2CE6               	goto	l1578
  2599                           	line	185
  2600                           ;main.c: 185: case 6:
  2601                           	
  2602  04B7                     l1588:	
  2603                           	line	186
  2604                           ;main.c: 186: LATBbits.LATB1 = 1;
  2605  04B7  0022               	movlb 2	; select bank2
  2606  04B8  148D               	bsf	(269)^0100h,1	;volatile
  2607                           	line	187
  2608                           ;main.c: 187: LATBbits.LATB3 = 0;
  2609  04B9  118D               	bcf	(269)^0100h,3	;volatile
  2610                           	line	188
  2611                           ;main.c: 188: LATAbits.LATA6 = 1;
  2612  04BA  170C               	bsf	(268)^0100h,6	;volatile
  2613                           	line	189
  2614                           ;main.c: 189: LATBbits.LATB5 = 1;
  2615  04BB  168D               	bsf	(269)^0100h,5	;volatile
  2616                           	line	190
  2617                           ;main.c: 190: LATAbits.LATA4 = 1;
  2618  04BC  160C               	bsf	(268)^0100h,4	;volatile
  2619                           	line	191
  2620                           ;main.c: 191: LATBbits.LATB2 = 1;
  2621  04BD  150D               	bsf	(269)^0100h,2	;volatile
  2622                           	line	192
  2623                           ;main.c: 192: LATBbits.LATB0 = 1;
  2624  04BE  140D               	bsf	(269)^0100h,0	;volatile
  2625                           	line	193
  2626                           ;main.c: 193: break;
  2627  04BF  2CE6               	goto	l1578
  2628                           	line	194
  2629                           ;main.c: 194: case 7:
  2630                           	
  2631  04C0                     l1589:	
  2632                           	line	195
  2633                           ;main.c: 195: LATBbits.LATB1 = 1;
  2634  04C0  0022               	movlb 2	; select bank2
  2635  04C1  148D               	bsf	(269)^0100h,1	;volatile
  2636                           	line	196
  2637                           ;main.c: 196: LATBbits.LATB3 = 1;
  2638  04C2  158D               	bsf	(269)^0100h,3	;volatile
  2639                           	line	197
  2640                           ;main.c: 197: LATAbits.LATA6 = 1;
  2641  04C3  170C               	bsf	(268)^0100h,6	;volatile
  2642                           	line	198
  2643                           ;main.c: 198: LATBbits.LATB5 = 0;
  2644  04C4  128D               	bcf	(269)^0100h,5	;volatile
  2645                           	line	199
  2646                           ;main.c: 199: LATAbits.LATA4 = 0;
  2647  04C5  120C               	bcf	(268)^0100h,4	;volatile
  2648                           	line	200
  2649                           ;main.c: 200: LATBbits.LATB2 = 0;
  2650  04C6  110D               	bcf	(269)^0100h,2	;volatile
  2651                           	line	201
  2652                           ;main.c: 201: LATBbits.LATB0 = 0;
  2653  04C7  100D               	bcf	(269)^0100h,0	;volatile
  2654                           	line	202
  2655                           ;main.c: 202: break;
  2656  04C8  2CE6               	goto	l1578
  2657                           	line	203
  2658                           ;main.c: 203: case 8:
  2659                           	
  2660  04C9                     l1590:	
  2661                           	line	204
  2662                           ;main.c: 204: LATBbits.LATB1 = 1;
  2663  04C9  0022               	movlb 2	; select bank2
  2664  04CA  148D               	bsf	(269)^0100h,1	;volatile
  2665                           	line	205
  2666                           ;main.c: 205: LATBbits.LATB3 = 1;
  2667  04CB  158D               	bsf	(269)^0100h,3	;volatile
  2668                           	line	206
  2669                           ;main.c: 206: LATAbits.LATA6 = 1;
  2670  04CC  170C               	bsf	(268)^0100h,6	;volatile
  2671                           	line	207
  2672                           ;main.c: 207: LATBbits.LATB5 = 1;
  2673  04CD  168D               	bsf	(269)^0100h,5	;volatile
  2674                           	line	208
  2675                           ;main.c: 208: LATAbits.LATA4 = 1;
  2676  04CE  160C               	bsf	(268)^0100h,4	;volatile
  2677                           	line	209
  2678                           ;main.c: 209: LATBbits.LATB2 = 1;
  2679  04CF  150D               	bsf	(269)^0100h,2	;volatile
  2680                           	line	210
  2681                           ;main.c: 210: LATBbits.LATB0 = 1;
  2682  04D0  140D               	bsf	(269)^0100h,0	;volatile
  2683                           	line	211
  2684                           ;main.c: 211: break;
  2685  04D1  2CE6               	goto	l1578
  2686                           	line	212
  2687                           ;main.c: 212: case 9:
  2688                           	
  2689  04D2                     l1591:	
  2690                           	line	213
  2691                           ;main.c: 213: LATBbits.LATB1 = 1;
  2692  04D2  0022               	movlb 2	; select bank2
  2693  04D3  148D               	bsf	(269)^0100h,1	;volatile
  2694                           	line	214
  2695                           ;main.c: 214: LATBbits.LATB3 = 1;
  2696  04D4  158D               	bsf	(269)^0100h,3	;volatile
  2697                           	line	215
  2698                           ;main.c: 215: LATAbits.LATA6 = 1;
  2699  04D5  170C               	bsf	(268)^0100h,6	;volatile
  2700                           	line	216
  2701                           ;main.c: 216: LATBbits.LATB5 = 1;
  2702  04D6  168D               	bsf	(269)^0100h,5	;volatile
  2703                           	line	217
  2704                           ;main.c: 217: LATAbits.LATA4 = 0;
  2705  04D7  120C               	bcf	(268)^0100h,4	;volatile
  2706                           	line	218
  2707                           ;main.c: 218: LATBbits.LATB2 = 1;
  2708  04D8  150D               	bsf	(269)^0100h,2	;volatile
  2709                           	line	219
  2710                           ;main.c: 219: LATBbits.LATB0 = 1;
  2711  04D9  140D               	bsf	(269)^0100h,0	;volatile
  2712                           	line	220
  2713                           ;main.c: 220: break;
  2714  04DA  2CE6               	goto	l1578
  2715                           	line	221
  2716                           	
  2717  04DB                     l4119:	
  2718                           ;main.c: 221: }
  2719  04DB  2CE6               	goto	l1578
  2720                           	line	121
  2721                           	
  2722  04DC                     l1579:	
  2723                           	
  2724  04DC                     l4121:	
  2725  04DC  0870               	movf	(set_sevenseg@digit),w
  2726                           	; Switch size 1, requested type "space"
  2727                           ; Number of cases is 10, Range of values is 0 to 9
  2728                           ; switch strategies available:
  2729                           ; Name         Instructions Cycles
  2730                           ; direct_byte           26     6 (fixed)
  2731                           ; simple_byte           31    16 (average)
  2732                           ; jumptable            260     6 (fixed)
  2733                           ; rangetable            14     4 (fixed)
  2734                           ; spacedrange           25     6 (fixed)
  2735                           ; locatedrange          10     3 (fixed)
  2736                           ;	Chosen strategy is direct_byte
  2737                           
  2738  04DD  0084               	movwf fsr0l
  2739  04DE  300A               	movlw	10
  2740  04DF  0204               	subwf	fsr0l,w
  2741  04E0  1803               skipnc
  2742  04E1  2C78               goto l1580
  2743  04E2  3180               movlp high(S4371)
  2744  04E3  3504               	lslf fsr0l,w
  2745  04E4  3E04               	addlw low(S4371)
  2746  04E5  0082               	movwf pc
  2747                           psect	swtext1,local,class=CONST,delta=2
  2748                           global __pswtext1
  2749  0004                     __pswtext1:
  2750  0004                     S4371:
  2751  0004  3184  2C81         	ljmp	l1582
  2752  0006  3184  2C8A         	ljmp	l1583
  2753  0008  3184  2C93         	ljmp	l1584
  2754  000A  3184  2C9C         	ljmp	l1585
  2755  000C  3184  2CA5         	ljmp	l1586
  2756  000E  3184  2CAE         	ljmp	l1587
  2757  0010  3184  2CB7         	ljmp	l1588
  2758  0012  3184  2CC0         	ljmp	l1589
  2759  0014  3184  2CC9         	ljmp	l1590
  2760  0016  3184  2CD2         	ljmp	l1591
  2761                           psect	text209
  2762                           
  2763                           	line	221
  2764                           	
  2765  04E6                     l1581:	
  2766                           	line	223
  2767                           	
  2768  04E6                     l1578:	
  2769  04E6  0008               	return
  2770                           	opt stack 0
  2771                           GLOBAL	__end_of_set_sevenseg
  2772  04E7                     	__end_of_set_sevenseg:
  2773                           	signat	_set_sevenseg,4216
  2774                           	global	_delaysome
  2775                           
  2776 ;; *************** function _delaysome *****************
  2777 ;; Defined at:
  2778 ;;		line 226 in file "main.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  delayawhile     2    0[COMMON] unsigned int 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;		None               void
  2785 ;; Registers used:
  2786 ;;		wreg, status,2
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2792 ;;      Params:         0       0       0       0       0       0
  2793 ;;      Locals:         2       0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0
  2795 ;;      Totals:         2       0       0       0       0       0
  2796 ;;Total ram usage:        2 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           psect	text210,local,class=CODE,delta=2,merge=1
  2805                           global __ptext210
  2806  0366                     __ptext210:	;psect for function _delaysome
  2807                           psect	text210
  2808                           	file	"main.c"
  2809                           	line	226
  2810                           	global	__size_of_delaysome
  2811  001C                     	__size_of_delaysome	equ	__end_of_delaysome-_delaysome
  2812                           	
  2813  0366                     _delaysome:	
  2814                           	opt	stack 15
  2815                           ; Regs used in _delaysome: [wreg+status,2]
  2816                           	line	228
  2817                           	
  2818  0366                     l4127:	
  2819                           ;main.c: 227: unsigned int delayawhile;
  2820                           ;main.c: 228: for(delayawhile=0;delayawhile < 200;){
  2821  0366  01F0               	clrf	(delaysome@delayawhile)
  2822  0367  01F1               	clrf	(delaysome@delayawhile+1)
  2823                           	
  2824  0368                     l4129:	
  2825  0368  3000               	movlw	high(0C8h)
  2826  0369  0271               	subwf	(delaysome@delayawhile+1),w
  2827  036A  30C8               	movlw	low(0C8h)
  2828  036B  1903               	skipnz
  2829  036C  0270               	subwf	(delaysome@delayawhile),w
  2830  036D  1C03               	skipc
  2831  036E  2B70               	goto	u421
  2832  036F  2B71               	goto	u420
  2833  0370                     u421:
  2834  0370  2B73               	goto	l4133
  2835  0371                     u420:
  2836  0371  2B81               	goto	l1596
  2837                           	
  2838  0372                     l4131:	
  2839  0372  2B81               	goto	l1596
  2840                           	
  2841  0373                     l1594:	
  2842                           	line	229
  2843                           	
  2844  0373                     l4133:	
  2845                           ;main.c: 229: delayawhile++;
  2846  0373  3001               	movlw	low(01h)
  2847  0374  07F0               	addwf	(delaysome@delayawhile),f
  2848  0375  3000               	movlw	high(01h)
  2849  0376  3DF1               	addwfc	(delaysome@delayawhile+1),f
  2850                           	line	228
  2851  0377  3000               	movlw	high(0C8h)
  2852  0378  0271               	subwf	(delaysome@delayawhile+1),w
  2853  0379  30C8               	movlw	low(0C8h)
  2854  037A  1903               	skipnz
  2855  037B  0270               	subwf	(delaysome@delayawhile),w
  2856  037C  1C03               	skipc
  2857  037D  2B7F               	goto	u431
  2858  037E  2B80               	goto	u430
  2859  037F                     u431:
  2860  037F  2B73               	goto	l4133
  2861  0380                     u430:
  2862  0380  2B81               	goto	l1596
  2863                           	
  2864  0381                     l1595:	
  2865                           	line	231
  2866                           	
  2867  0381                     l1596:	
  2868  0381  0008               	return
  2869                           	opt stack 0
  2870                           GLOBAL	__end_of_delaysome
  2871  0382                     	__end_of_delaysome:
  2872                           	signat	_delaysome,88
  2873                           	global	___lmul
  2874                           
  2875 ;; *************** function ___lmul *****************
  2876 ;; Defined at:
  2877 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.10\sources\lmul.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  multiplier      4    0[COMMON] unsigned long 
  2880 ;;  multiplicand    4    4[COMMON] unsigned long 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  product         4    8[COMMON] unsigned long 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  4    0[COMMON] unsigned long 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2892 ;;      Params:         8       0       0       0       0       0
  2893 ;;      Locals:         4       0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0
  2895 ;;      Totals:        12       0       0       0       0       0
  2896 ;;Total ram usage:       12 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           psect	text211,local,class=CODE,delta=2,merge=1
  2905                           global __ptext211
  2906  0382                     __ptext211:	;psect for function ___lmul
  2907                           psect	text211
  2908                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.10\sources\lmul.c"
  2909                           	line	3
  2910                           	global	__size_of___lmul
  2911  0037                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  2912                           	
  2913  0382                     ___lmul:	
  2914                           	opt	stack 15
  2915                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2916                           	line	4
  2917                           	
  2918  0382                     l4135:	
  2919  0382  3000               	movlw	0
  2920  0383  00FB               	movwf	(___lmul@product+3)
  2921  0384  3000               	movlw	0
  2922  0385  00FA               	movwf	(___lmul@product+2)
  2923  0386  3000               	movlw	0
  2924  0387  00F9               	movwf	(___lmul@product+1)
  2925  0388  3000               	movlw	0
  2926  0389  00F8               	movwf	(___lmul@product)
  2927                           
  2928  038A  2B8B               	goto	l4137
  2929                           	line	6
  2930                           	
  2931  038B                     l3310:	
  2932                           	line	7
  2933                           	
  2934  038B                     l4137:	
  2935  038B  1C70               	btfss	(___lmul@multiplier),(0)&7
  2936  038C  2B8E               	goto	u441
  2937  038D  2B8F               	goto	u440
  2938  038E                     u441:
  2939  038E  2B98               	goto	l4141
  2940  038F                     u440:
  2941                           	line	8
  2942                           	
  2943  038F                     l4139:	
  2944  038F  0874               	movf	(___lmul@multiplicand),w
  2945  0390  07F8               	addwf	(___lmul@product),f
  2946  0391  0875               	movf	(___lmul@multiplicand+1),w
  2947  0392  3DF9               	addwfc	(___lmul@product+1),f
  2948  0393  0876               	movf	(___lmul@multiplicand+2),w
  2949  0394  3DFA               	addwfc	(___lmul@product+2),f
  2950  0395  0877               	movf	(___lmul@multiplicand+3),w
  2951  0396  3DFB               	addwfc	(___lmul@product+3),f
  2952  0397  2B98               	goto	l4141
  2953                           	
  2954  0398                     l3311:	
  2955                           	line	9
  2956                           	
  2957  0398                     l4141:	
  2958  0398  3001               	movlw	01h
  2959  0399                     u455:
  2960  0399  35F4               	lslf	(___lmul@multiplicand),f
  2961  039A  0DF5               	rlf	(___lmul@multiplicand+1),f
  2962  039B  0DF6               	rlf	(___lmul@multiplicand+2),f
  2963  039C  0DF7               	rlf	(___lmul@multiplicand+3),f
  2964  039D  0B89               	decfsz	wreg,f
  2965  039E  2B99               	goto	u455
  2966                           	line	10
  2967                           	
  2968  039F                     l4143:	
  2969  039F  3001               	movlw	01h
  2970  03A0                     u465:
  2971  03A0  36F3               	lsrf	(___lmul@multiplier+3),f
  2972  03A1  0CF2               	rrf	(___lmul@multiplier+2),f
  2973  03A2  0CF1               	rrf	(___lmul@multiplier+1),f
  2974  03A3  0CF0               	rrf	(___lmul@multiplier),f
  2975  03A4  0B89               	decfsz	wreg,f
  2976  03A5  2BA0               	goto	u465
  2977                           
  2978                           	line	11
  2979  03A6  0873               	movf	(___lmul@multiplier+3),w
  2980  03A7  0472               	iorwf	(___lmul@multiplier+2),w
  2981  03A8  0471               	iorwf	(___lmul@multiplier+1),w
  2982  03A9  0470               	iorwf	(___lmul@multiplier),w
  2983  03AA  1D03               	skipz
  2984  03AB  2BAD               	goto	u471
  2985  03AC  2BAE               	goto	u470
  2986  03AD                     u471:
  2987  03AD  2B8B               	goto	l4137
  2988  03AE                     u470:
  2989  03AE  2BAF               	goto	l4145
  2990                           	
  2991  03AF                     l3312:	
  2992                           	line	12
  2993                           	
  2994  03AF                     l4145:	
  2995  03AF  087B               	movf	(___lmul@product+3),w
  2996  03B0  00F3               	movwf	(?___lmul+3)
  2997  03B1  087A               	movf	(___lmul@product+2),w
  2998  03B2  00F2               	movwf	(?___lmul+2)
  2999  03B3  0879               	movf	(___lmul@product+1),w
  3000  03B4  00F1               	movwf	(?___lmul+1)
  3001  03B5  0878               	movf	(___lmul@product),w
  3002  03B6  00F0               	movwf	(?___lmul)
  3003                           
  3004  03B7  2BB8               	goto	l3313
  3005                           	
  3006  03B8                     l4147:	
  3007                           	line	13
  3008                           	
  3009  03B8                     l3313:	
  3010  03B8  0008               	return
  3011                           	opt stack 0
  3012                           GLOBAL	__end_of___lmul
  3013  03B9                     	__end_of___lmul:
  3014                           	signat	___lmul,8316
  3015                           	global	___llmod
  3016                           
  3017 ;; *************** function ___llmod *****************
  3018 ;; Defined at:
  3019 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.10\sources\llmod.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  divisor         4    0[BANK0 ] unsigned long 
  3022 ;;  dividend        4    4[BANK0 ] unsigned long 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  counter         1    9[BANK0 ] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  4    0[BANK0 ] unsigned long 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3034 ;;      Params:         0       8       0       0       0       0
  3035 ;;      Locals:         0       1       0       0       0       0
  3036 ;;      Temps:          0       1       0       0       0       0
  3037 ;;      Totals:         0      10       0       0       0       0
  3038 ;;Total ram usage:       10 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           psect	text212,local,class=CODE,delta=2,merge=1
  3047                           global __ptext212
  3048  03B9                     __ptext212:	;psect for function ___llmod
  3049                           psect	text212
  3050                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.10\sources\llmod.c"
  3051                           	line	5
  3052                           	global	__size_of___llmod
  3053  0053                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  3054                           	
  3055  03B9                     ___llmod:	
  3056                           	opt	stack 15
  3057                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3058                           	line	8
  3059                           	
  3060  03B9                     l4217:	
  3061  03B9  0020               	movlb 0	; select bank0
  3062  03BA  0823               	movf	(___llmod@divisor+3),w
  3063  03BB  0422               	iorwf	(___llmod@divisor+2),w
  3064  03BC  0421               	iorwf	(___llmod@divisor+1),w
  3065  03BD  0420               	iorwf	(___llmod@divisor),w
  3066  03BE  1903               	skipnz
  3067  03BF  2BC1               	goto	u601
  3068  03C0  2BC2               	goto	u600
  3069  03C1                     u601:
  3070  03C1  2C02               	goto	l4233
  3071  03C2                     u600:
  3072                           	line	9
  3073                           	
  3074  03C2                     l4219:	
  3075  03C2  01A9               	clrf	(___llmod@counter)
  3076  03C3  1403               	bsf	status,0
  3077  03C4  0DA9               	rlf	(___llmod@counter),f
  3078                           	line	10
  3079  03C5  2BD2               	goto	l4223
  3080                           	
  3081  03C6                     l3390:	
  3082                           	line	11
  3083                           	
  3084  03C6                     l4221:	
  3085  03C6  3001               	movlw	01h
  3086  03C7                     u615:
  3087  03C7  35A0               	lslf	(___llmod@divisor),f
  3088  03C8  0DA1               	rlf	(___llmod@divisor+1),f
  3089  03C9  0DA2               	rlf	(___llmod@divisor+2),f
  3090  03CA  0DA3               	rlf	(___llmod@divisor+3),f
  3091  03CB  0B89               	decfsz	wreg,f
  3092  03CC  2BC7               	goto	u615
  3093                           	line	12
  3094  03CD  3001               	movlw	(01h)
  3095  03CE  00A8               	movwf	(??___llmod+0)+0
  3096  03CF  0828               	movf	(??___llmod+0)+0,w
  3097  03D0  07A9               	addwf	(___llmod@counter),f
  3098  03D1  2BD2               	goto	l4223
  3099                           	line	13
  3100                           	
  3101  03D2                     l3389:	
  3102                           	line	10
  3103                           	
  3104  03D2                     l4223:	
  3105  03D2  1FA3               	btfss	(___llmod@divisor+3),(31)&7
  3106  03D3  2BD5               	goto	u621
  3107  03D4  2BD6               	goto	u620
  3108  03D5                     u621:
  3109  03D5  2BC6               	goto	l4221
  3110  03D6                     u620:
  3111  03D6  2BD8               	goto	l4225
  3112                           	
  3113  03D7                     l3391:	
  3114  03D7  2BD8               	goto	l4225
  3115                           	line	14
  3116                           	
  3117  03D8                     l3392:	
  3118                           	line	15
  3119                           	
  3120  03D8                     l4225:	
  3121  03D8  0823               	movf	(___llmod@divisor+3),w
  3122  03D9  0227               	subwf	(___llmod@dividend+3),w
  3123  03DA  1D03               	skipz
  3124  03DB  2BE6               	goto	u635
  3125  03DC  0822               	movf	(___llmod@divisor+2),w
  3126  03DD  0226               	subwf	(___llmod@dividend+2),w
  3127  03DE  1D03               	skipz
  3128  03DF  2BE6               	goto	u635
  3129  03E0  0821               	movf	(___llmod@divisor+1),w
  3130  03E1  0225               	subwf	(___llmod@dividend+1),w
  3131  03E2  1D03               	skipz
  3132  03E3  2BE6               	goto	u635
  3133  03E4  0820               	movf	(___llmod@divisor),w
  3134  03E5  0224               	subwf	(___llmod@dividend),w
  3135  03E6                     u635:
  3136  03E6  1C03               	skipc
  3137  03E7  2BE9               	goto	u631
  3138  03E8  2BEA               	goto	u630
  3139  03E9                     u631:
  3140  03E9  2BF3               	goto	l4229
  3141  03EA                     u630:
  3142                           	line	16
  3143                           	
  3144  03EA                     l4227:	
  3145  03EA  0820               	movf	(___llmod@divisor),w
  3146  03EB  02A4               	subwf	(___llmod@dividend),f
  3147  03EC  0821               	movf	(___llmod@divisor+1),w
  3148  03ED  3BA5               	subwfb	(___llmod@dividend+1),f
  3149  03EE  0822               	movf	(___llmod@divisor+2),w
  3150  03EF  3BA6               	subwfb	(___llmod@dividend+2),f
  3151  03F0  0823               	movf	(___llmod@divisor+3),w
  3152  03F1  3BA7               	subwfb	(___llmod@dividend+3),f
  3153  03F2  2BF3               	goto	l4229
  3154                           	
  3155  03F3                     l3393:	
  3156                           	line	17
  3157                           	
  3158  03F3                     l4229:	
  3159  03F3  3001               	movlw	01h
  3160  03F4                     u645:
  3161  03F4  36A3               	lsrf	(___llmod@divisor+3),f
  3162  03F5  0CA2               	rrf	(___llmod@divisor+2),f
  3163  03F6  0CA1               	rrf	(___llmod@divisor+1),f
  3164  03F7  0CA0               	rrf	(___llmod@divisor),f
  3165  03F8  0B89               	decfsz	wreg,f
  3166  03F9  2BF4               	goto	u645
  3167                           
  3168                           	line	18
  3169                           	
  3170  03FA                     l4231:	
  3171  03FA  3001               	movlw	low(01h)
  3172  03FB  02A9               	subwf	(___llmod@counter),f
  3173  03FC  1D03               	btfss	status,2
  3174  03FD  2BFF               	goto	u651
  3175  03FE  2C00               	goto	u650
  3176  03FF                     u651:
  3177  03FF  2BD8               	goto	l4225
  3178  0400                     u650:
  3179  0400  2C02               	goto	l4233
  3180                           	
  3181  0401                     l3394:	
  3182  0401  2C02               	goto	l4233
  3183                           	line	19
  3184                           	
  3185  0402                     l3388:	
  3186                           	line	20
  3187                           	
  3188  0402                     l4233:	
  3189  0402  0827               	movf	(___llmod@dividend+3),w
  3190  0403  00A3               	movwf	(?___llmod+3)
  3191  0404  0826               	movf	(___llmod@dividend+2),w
  3192  0405  00A2               	movwf	(?___llmod+2)
  3193  0406  0825               	movf	(___llmod@dividend+1),w
  3194  0407  00A1               	movwf	(?___llmod+1)
  3195  0408  0824               	movf	(___llmod@dividend),w
  3196  0409  00A0               	movwf	(?___llmod)
  3197                           
  3198  040A  2C0B               	goto	l3395
  3199                           	
  3200  040B                     l4235:	
  3201                           	line	21
  3202                           	
  3203  040B                     l3395:	
  3204  040B  0008               	return
  3205                           	opt stack 0
  3206                           GLOBAL	__end_of___llmod
  3207  040C                     	__end_of___llmod:
  3208                           	signat	___llmod,8316
  3209                           	global	___lldiv
  3210                           
  3211 ;; *************** function ___lldiv *****************
  3212 ;; Defined at:
  3213 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.10\sources\lldiv.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  divisor         4    0[COMMON] unsigned long 
  3216 ;;  dividend        4    4[COMMON] unsigned long 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  quotient        4    9[COMMON] unsigned long 
  3219 ;;  counter         1   13[COMMON] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  4    0[COMMON] unsigned long 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3229 ;;      Params:         8       0       0       0       0       0
  3230 ;;      Locals:         5       0       0       0       0       0
  3231 ;;      Temps:          1       0       0       0       0       0
  3232 ;;      Totals:        14       0       0       0       0       0
  3233 ;;Total ram usage:       14 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_config_adc
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           psect	text213,local,class=CODE,delta=2,merge=1
  3243                           global __ptext213
  3244  040C                     __ptext213:	;psect for function ___lldiv
  3245                           psect	text213
  3246                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.10\sources\lldiv.c"
  3247                           	line	5
  3248                           	global	__size_of___lldiv
  3249  0062                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3250                           	
  3251  040C                     ___lldiv:	
  3252                           	opt	stack 15
  3253                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3254                           	line	9
  3255                           	
  3256  040C                     l4149:	
  3257  040C  3000               	movlw	0
  3258  040D  00FC               	movwf	(___lldiv@quotient+3)
  3259  040E  3000               	movlw	0
  3260  040F  00FB               	movwf	(___lldiv@quotient+2)
  3261  0410  3000               	movlw	0
  3262  0411  00FA               	movwf	(___lldiv@quotient+1)
  3263  0412  3000               	movlw	0
  3264  0413  00F9               	movwf	(___lldiv@quotient)
  3265                           
  3266                           	line	10
  3267  0414  0873               	movf	(___lldiv@divisor+3),w
  3268  0415  0472               	iorwf	(___lldiv@divisor+2),w
  3269  0416  0471               	iorwf	(___lldiv@divisor+1),w
  3270  0417  0470               	iorwf	(___lldiv@divisor),w
  3271  0418  1903               	skipnz
  3272  0419  2C1B               	goto	u481
  3273  041A  2C1C               	goto	u480
  3274  041B                     u481:
  3275  041B  2C64               	goto	l4169
  3276  041C                     u480:
  3277                           	line	11
  3278                           	
  3279  041C                     l4151:	
  3280  041C  01FD               	clrf	(___lldiv@counter)
  3281  041D  1403               	bsf	status,0
  3282  041E  0DFD               	rlf	(___lldiv@counter),f
  3283                           	line	12
  3284  041F  2C2C               	goto	l4155
  3285                           	
  3286  0420                     l3409:	
  3287                           	line	13
  3288                           	
  3289  0420                     l4153:	
  3290  0420  3001               	movlw	01h
  3291  0421                     u495:
  3292  0421  35F0               	lslf	(___lldiv@divisor),f
  3293  0422  0DF1               	rlf	(___lldiv@divisor+1),f
  3294  0423  0DF2               	rlf	(___lldiv@divisor+2),f
  3295  0424  0DF3               	rlf	(___lldiv@divisor+3),f
  3296  0425  0B89               	decfsz	wreg,f
  3297  0426  2C21               	goto	u495
  3298                           	line	14
  3299  0427  3001               	movlw	(01h)
  3300  0428  00F8               	movwf	(??___lldiv+0)+0
  3301  0429  0878               	movf	(??___lldiv+0)+0,w
  3302  042A  07FD               	addwf	(___lldiv@counter),f
  3303  042B  2C2C               	goto	l4155
  3304                           	line	15
  3305                           	
  3306  042C                     l3408:	
  3307                           	line	12
  3308                           	
  3309  042C                     l4155:	
  3310  042C  1FF3               	btfss	(___lldiv@divisor+3),(31)&7
  3311  042D  2C2F               	goto	u501
  3312  042E  2C30               	goto	u500
  3313  042F                     u501:
  3314  042F  2C20               	goto	l4153
  3315  0430                     u500:
  3316  0430  2C32               	goto	l4157
  3317                           	
  3318  0431                     l3410:	
  3319  0431  2C32               	goto	l4157
  3320                           	line	16
  3321                           	
  3322  0432                     l3411:	
  3323                           	line	17
  3324                           	
  3325  0432                     l4157:	
  3326  0432  3001               	movlw	01h
  3327  0433                     u515:
  3328  0433  35F9               	lslf	(___lldiv@quotient),f
  3329  0434  0DFA               	rlf	(___lldiv@quotient+1),f
  3330  0435  0DFB               	rlf	(___lldiv@quotient+2),f
  3331  0436  0DFC               	rlf	(___lldiv@quotient+3),f
  3332  0437  0B89               	decfsz	wreg,f
  3333  0438  2C33               	goto	u515
  3334                           	line	18
  3335                           	
  3336  0439                     l4159:	
  3337  0439  0873               	movf	(___lldiv@divisor+3),w
  3338  043A  0277               	subwf	(___lldiv@dividend+3),w
  3339  043B  1D03               	skipz
  3340  043C  2C47               	goto	u525
  3341  043D  0872               	movf	(___lldiv@divisor+2),w
  3342  043E  0276               	subwf	(___lldiv@dividend+2),w
  3343  043F  1D03               	skipz
  3344  0440  2C47               	goto	u525
  3345  0441  0871               	movf	(___lldiv@divisor+1),w
  3346  0442  0275               	subwf	(___lldiv@dividend+1),w
  3347  0443  1D03               	skipz
  3348  0444  2C47               	goto	u525
  3349  0445  0870               	movf	(___lldiv@divisor),w
  3350  0446  0274               	subwf	(___lldiv@dividend),w
  3351  0447                     u525:
  3352  0447  1C03               	skipc
  3353  0448  2C4A               	goto	u521
  3354  0449  2C4B               	goto	u520
  3355  044A                     u521:
  3356  044A  2C55               	goto	l4165
  3357  044B                     u520:
  3358                           	line	19
  3359                           	
  3360  044B                     l4161:	
  3361  044B  0870               	movf	(___lldiv@divisor),w
  3362  044C  02F4               	subwf	(___lldiv@dividend),f
  3363  044D  0871               	movf	(___lldiv@divisor+1),w
  3364  044E  3BF5               	subwfb	(___lldiv@dividend+1),f
  3365  044F  0872               	movf	(___lldiv@divisor+2),w
  3366  0450  3BF6               	subwfb	(___lldiv@dividend+2),f
  3367  0451  0873               	movf	(___lldiv@divisor+3),w
  3368  0452  3BF7               	subwfb	(___lldiv@dividend+3),f
  3369                           	line	20
  3370                           	
  3371  0453                     l4163:	
  3372  0453  1479               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  3373  0454  2C55               	goto	l4165
  3374                           	line	21
  3375                           	
  3376  0455                     l3412:	
  3377                           	line	22
  3378                           	
  3379  0455                     l4165:	
  3380  0455  3001               	movlw	01h
  3381  0456                     u535:
  3382  0456  36F3               	lsrf	(___lldiv@divisor+3),f
  3383  0457  0CF2               	rrf	(___lldiv@divisor+2),f
  3384  0458  0CF1               	rrf	(___lldiv@divisor+1),f
  3385  0459  0CF0               	rrf	(___lldiv@divisor),f
  3386  045A  0B89               	decfsz	wreg,f
  3387  045B  2C56               	goto	u535
  3388                           
  3389                           	line	23
  3390                           	
  3391  045C                     l4167:	
  3392  045C  3001               	movlw	low(01h)
  3393  045D  02FD               	subwf	(___lldiv@counter),f
  3394  045E  1D03               	btfss	status,2
  3395  045F  2C61               	goto	u541
  3396  0460  2C62               	goto	u540
  3397  0461                     u541:
  3398  0461  2C32               	goto	l4157
  3399  0462                     u540:
  3400  0462  2C64               	goto	l4169
  3401                           	
  3402  0463                     l3413:	
  3403  0463  2C64               	goto	l4169
  3404                           	line	24
  3405                           	
  3406  0464                     l3407:	
  3407                           	line	25
  3408                           	
  3409  0464                     l4169:	
  3410  0464  087C               	movf	(___lldiv@quotient+3),w
  3411  0465  00F3               	movwf	(?___lldiv+3)
  3412  0466  087B               	movf	(___lldiv@quotient+2),w
  3413  0467  00F2               	movwf	(?___lldiv+2)
  3414  0468  087A               	movf	(___lldiv@quotient+1),w
  3415  0469  00F1               	movwf	(?___lldiv+1)
  3416  046A  0879               	movf	(___lldiv@quotient),w
  3417  046B  00F0               	movwf	(?___lldiv)
  3418                           
  3419  046C  2C6D               	goto	l3414
  3420                           	
  3421  046D                     l4171:	
  3422                           	line	26
  3423                           	
  3424  046D                     l3414:	
  3425  046D  0008               	return
  3426                           	opt stack 0
  3427                           GLOBAL	__end_of___lldiv
  3428  046E                     	__end_of___lldiv:
  3429                           	signat	___lldiv,8316
  3430                           psect	text214,local,class=CODE,delta=2,merge=1
  3431                           global __ptext214
  3432  0000                     __ptext214:	;psect for function ___lldiv
  3433                           	global	btemp
  3434  007E                     	btemp set 07Eh
  3435                           
  3436                           	DABS	1,126,2	;btemp
  3437                           	global	wtemp0
  3438  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80      0      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ?___llmod	unsigned long  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?_ADCRead	unsigned int  size(1) Largest target is 0

    ?___lldiv	unsigned long  size(1) Largest target is 0

    environ	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    config_adc@adcCal	PTR unsigned long  size(1) Largest target is 43
		 -> main@adc(BANK0[43]), 


Critical Paths under _main in COMMON

    _main->___lldiv
    _config_adc->___lldiv
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    _main->_config_adc

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    63      4    1775
                                             11 BANK0     67    63      4
                       _config_clock
                        _config_port
                         _config_adc
                            _ADCRead
                             ___lmul
                            ___lldiv
                            ___llmod
                       _set_sevenseg
                          _delaysome
 ---------------------------------------------------------------------------------
 (1) _config_port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_adc                                          11    11      0     345
                                              0 BANK0     11    11      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _ADCRead                                              6     4      2       0
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _set_sevenseg                                         1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delaysome                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8      92
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     159
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     162
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_clock
   _config_port
   _config_adc
     ___lldiv
   _ADCRead
   ___lmul
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   _set_sevenseg
   _delaysome

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       2       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      89       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2B       8       53.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      8B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Sat Sep 01 20:23:48 2012

                      pc 0002                      u400 0354                      u401 0353  
                    u410 0475                      u411 0474                      u500 0430  
                    u420 0371                      u501 042F                      u421 0370  
                    u430 0380                      u431 037F                      u520 044B  
                    u600 03C2                      u440 038F                      u521 044A  
                    u601 03C1                      u441 038E                      u515 0433  
                    u540 0462                      u620 03D6                      u700 05EC  
                    u541 0461                      u525 0447                      u621 03D5  
                    u701 05EB                      u630 03EA                      u470 03AE  
                    u550 0511                      u710 0605                      u535 0456  
                    u631 03E9                      u615 03C7                      u471 03AD  
                    u455 0399                      u551 0510                      u711 0604  
                    u480 041C                      u560 0520                      u720 060D  
                    u481 041B                      u465 03A0                      u561 051F  
                    u721 060C                      u650 0400                      u570 0527  
                    u730 061B                      u651 03FF                      u635 03E6  
                    u571 0526                      u731 061A                      u580 0570  
                    u740 0668                      u660 058B                      u645 03F4  
                    u581 056F                      u590 057F                      u750 067D  
                    u670 05AC                      u495 0421                      u591 057E  
                    u751 067C                      u735 0617                      u671 05AB  
                    u760 073A                      u680 05BB                      u761 0739  
                    u745 0664                      u681 05BA                      u770 07D3  
                    u780 07DE                      u765 0736                      u695 05CF  
        __end_of_ADCRead 0366                      wreg 0009                     S4371 0004  
           __CFG_LVP$OFF 0000                     l1601 05AE                     l1610 07FC  
                   l1602 05BC                     l1611 07E2                     l1603 05EE  
                   l1612 07FD                     l1604 0606                     l4101 0345  
                   l1613 07FE                     l1605 0607                     l3310 038B  
                   l1614 07FE                     l1606 06BD                     l3311 0398  
                   l4111 0355                     l4103 0347                     l1607 06BC  
                   l3312 03AF                     l1608 0681                     l3313 03B8  
                   l4121 04DC                     l4113 0365                     l4201 0528  
                   l1561 0513                     l4105 034A                     l1609 0743  
                   l3410 0431                     l1562 0520                     l3411 0432  
                   l4131 0372                     l4115 046F                     l1571 0350  
                   l4211 0567                     l4203 053A                     l1563 0523  
                   l4107 0323                     l1555 034C                     l3412 0455  
                   l1580 0478                     l1572 0350                     l1564 0523  
                   l3413 0463                     l4221 03C6                     l4141 0398  
                   l4133 0373                     l1581 04E6                     l4117 0476  
                   l1573 0355                     l4109 034D                     l4213 0571  
                   l4205 0554                     l1565 0528                     l4301 0681  
                   l3414 046D                     l1590 04C9                     l1582 0481  
                   l1574 0365                     l1566 0572                     l1558 0326  
                   l3407 0464                     l4151 041C                     l4231 03FA  
                   l4223 03D2                     l4143 039F                     l4135 0382  
                   l4127 0366                     l4119 04DB                     l1591 04D2  
                   l1583 048A                     l1567 0580                     l4215 0572  
                   l4207 055F                     l4311 0714                     l4303 069F  
                   l3408 042C                     l1584 0493                     l1568 0580  
                   l4161 044B                     l4153 0420                     l3409 0420  
                   l4225 03D8                     l4233 0402                     l4217 03B9  
                   l4145 03AF                     l4137 038B                     l4129 0368  
                   l1585 049C                     l1577 0477                     l4209 0564  
                   l4321 07B7                     l4313 073A                     l4305 06BD  
                   l4241 0591                     l1594 0373                     l1586 04A5  
                   l1578 04E6                     l4171 046D                     l4163 0453  
                   l4155 042C                     l4235 040B                     l4227 03EA  
                   l4219 03C2                     l4147 03B8                     l4139 038F  
                   l1595 0381                     l1579 04DC                     l1587 04AE  
                   l4331 07E2                     l4323 07D3                     l4315 0743  
                   l4307 06D8                     l4251 0599                     l4243 0592  
                   l1596 0381                     l1588 04B7                     l4165 0455  
                   l4157 0432                     l4149 040C                     l4229 03F3  
                   l1589 04C0                     l4181 04F9                     l4173 04E9  
                   l4341 07EE                     l4333 07E5                     l4325 07D7  
                   l4317 075F                     l4309 06F4                     l4261 05AE  
                   l4253 059C                     l4245 0593                     l4237 0581  
                   l3390 03C6                     l4167 045C                     l4159 0439  
                   l3391 03D7                     l4191 0504                     l4183 04FB  
                   l4175 04F1                     l4095 033A                     l4343 07F0  
                   l4335 07E7                     l4327 07D9                     l4319 078B  
                   l4271 05ED                     l4263 05BC                     l4255 05A0  
                   l4247 0594                     l4239 058F                     l3392 03D8  
                   l4169 0464                     l3393 03F3                     l4193 0505  
                   l4185 04FD                     l4177 04F3                     l4097 0340  
                   l4345 07F3                     l4337 07E8                     l4329 07DE  
                   l4281 060D                     l4273 05EE                     l4265 05C6  
                   l4257 05A3                     l4249 0596                     l3394 0401  
                   l3395 040B                     l4195 0508                     l4187 0501  
                   l4179 04F8                     l4099 0343                     l4347 07F5  
                   l4339 07E9                     l4291 064A                     l4283 061B  
                   l4275 05F8                     l4267 05E1                     l4259 05AD  
                   l3388 0402                     l3389 03D2                     l4197 0512  
                   l4189 0502                     l4349 07F8                     l4293 065B  
                   l4285 061F                     l4277 05FC                     l4269 05E3  
                   l4199 0513                     l4295 0670                     l4287 0623  
                   l4279 0607                     l4297 0674                     l4289 063C  
                   l4299 067D                     _LATA 010C                     _LATB 010D  
                   _main 0581                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     fsr1l 0006  
                   btemp 007E           ??_config_clock 0070                     start 0002  
                  ?_main 002B            __CFG_WDTE$OFF 0000          __end_of___lldiv 046E  
        __end_of___llmod 040C                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D      ___lmul@multiplicand 0074  
      set_sevenseg@digit 0070                    _errno 006E                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 032D  
           __end_of_main 0800                ??_ADCRead 0072                   ??_main 002F  
       ___llmod@dividend 0024                   _ADRESH 009C                   _ADRESL 009B  
                 _ANSELA 018C     config_adc@measureFvr 0029                   ___lmul 0382  
              ??___lldiv 0078     __size_of_config_port 0013                ??___llmod 0028  
                 clrloop 0328     __end_of_config_clock 0327            main@updateadc 003D  
     main@readyToDisplay 003C  __end_of__initialization 0337           __pcstackCOMMON 0070  
     __size_of_delaysome 001C               __pbssBANK0 006E               __pbssBANK1 00A0  
             __pmaintext 0581                  ?___lmul 0070           ___lmul@product 0078  
                _ADCRead 034D               _config_adc 04E7           main@microVolts 0038  
      __end_of_delaysome 0382          __size_of___lmul 0037                  ___lldiv 040C  
                ___llmod 03B9    __size_of_config_clock 0004            ?_set_sevenseg 0070  
                main@adc 0043     end_of_initialization 0337          ___lldiv@divisor 0070  
           _config_clock 0323          ___lldiv@counter 007D           ??_set_sevenseg 0070  
       __CFG_FOSC$INTOSC 0000              ?_config_adc 0070               main@digit1 0035  
             main@digit2 0036               main@digit3 0037            ??_config_port 0070  
         __end_of___lmul 03B9      start_initialization 032D     delaysome@delayawhile 0070  
        ___llmod@divisor 0020          ___llmod@counter 0029      __size_of_config_adc 009A  
               ??___lmul 0078                 ?_ADCRead 0070      __end_of_config_port 034D  
          __pcstackBANK0 0020     __end_of_set_sevenseg 04E7                _delaysome 0366  
              __ptext210 0366                __ptext211 0382                __ptext212 03B9  
              __ptext204 0000                __ptext213 040C                __ptext205 033A  
              __ptext214 0000                __ptext206 0323                __ptext207 04E7  
              __ptext208 034D                __ptext209 046E                 ?___lldiv 0070  
               ?___llmod 0020                __pswtext1 0004                 _LATAbits 010C  
               _LATBbits 010D              _config_port 033A               ?_delaysome 0070  
              main@F2894 00A0   config_adc@microV_Count 0025         __size_of_ADCRead 0019  
             _ADCON0bits 009D               _ADCON1bits 009E             ??_config_adc 0020  
      ___lmul@multiplier 0070       __end_of_config_adc 0581         __size_of___lldiv 0062  
       config_adc@adcCal 0024         __size_of___llmod 0053               _ANSELBbits 018D  
  __size_of_set_sevenseg 0079            __size_of_main 027F                 clear_ram 0327  
            ??_delaysome 0070                 main@argc 002B                 main@argv 002D  
           _set_sevenseg 046E          main@temperature 003F               _FVRCONbits 0117  
       ___lldiv@dividend 0074               _OSCCONbits 0099         ___lldiv@quotient 0079  
          ?_config_clock 0070             ?_config_port 0070  
